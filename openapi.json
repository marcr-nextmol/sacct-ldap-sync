{
   "tags": [
     {
       "name": "slurm",
       "description": "methods that query slurmctld"
     },
     {
       "name": "slurmdb",
       "description": "methods that query slurmdbd"
     },
     {
       "name": "openapi",
       "description": "methods that query for generated OpenAPI specifications"
     }
   ],
   "paths": {
     "\/slurm\/v0.0.40\/shares": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get fairshare info",
         "operationId": "slurm_v0040_get_shares",
         "parameters": [
           {
             "in": "query",
             "name": "accounts",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Accounts to query",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "users",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Users to query",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_shares_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_shares_resp"
                 }
               }
             },
             "description": "shares information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_shares_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_shares_resp"
                 }
               }
             },
             "description": "shares information"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/reconfigure\/": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "request slurmctld reconfigure",
         "operationId": "slurm_v0040_get_reconfigure",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "reconfigure request result"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "reconfigure request result"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/diag\/": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get diagnostics",
         "operationId": "slurm_v0040_get_diag",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_diag_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_diag_resp"
                 }
               }
             },
             "description": "diagnostic results"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_diag_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_diag_resp"
                 }
               }
             },
             "description": "diagnostic results"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/ping\/": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "ping test",
         "operationId": "slurm_v0040_get_ping",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_ping_array_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_ping_array_resp"
                 }
               }
             },
             "description": "results of ping test"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_ping_array_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_ping_array_resp"
                 }
               }
             },
             "description": "results of ping test"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/licenses\/": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get all Slurm tracked license info",
         "operationId": "slurm_v0040_get_licenses",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_licenses_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_licenses_resp"
                 }
               }
             },
             "description": "results of get all licenses"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_licenses_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_licenses_resp"
                 }
               }
             },
             "description": "results of get all licenses"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/job\/submit": {
       "post": {
         "tags": [
           "slurm"
         ],
         "summary": "submit new job",
         "operationId": "slurm_v0040_post_job_submit",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_submit_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_submit_response"
                 }
               }
             },
             "description": "job submission response"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_submit_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_submit_response"
                 }
               }
             },
             "description": "job submission response"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_job_submit_req"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_job_submit_req"
               }
             }
           },
           "description": "Job description"
         }
       }
     },
     "\/slurm\/v0.0.40\/jobs\/": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get list of jobs",
         "operationId": "slurm_v0040_get_jobs",
         "parameters": [
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter jobs since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               }
             },
             "description": "job(s) information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               }
             },
             "description": "job(s) information"
           }
         }
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "send signal to list of jobs",
         "operationId": "slurm_v0040_delete_jobs",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_kill_jobs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_kill_jobs_resp"
                 }
               }
             },
             "description": "description of jobs to signal"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_kill_jobs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_kill_jobs_resp"
                 }
               }
             },
             "description": "description of jobs to signal"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_kill_jobs_msg"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_kill_jobs_msg"
               }
             }
           },
           "description": "Signal or cancel jobs"
         }
       }
     },
     "\/slurm\/v0.0.40\/jobs\/state\/": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get list of job states",
         "operationId": "slurm_v0040_get_jobs_state",
         "parameters": [
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter jobs since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               }
             },
             "description": "job(s) state information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               }
             },
             "description": "job(s) state information"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/job\/{job_id}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get job info",
         "operationId": "slurm_v0040_get_job",
         "parameters": [
           {
             "in": "path",
             "name": "job_id",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Job ID",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter jobs since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               }
             },
             "description": "job(s) information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_info_resp"
                 }
               }
             },
             "description": "job(s) information"
           }
         }
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "summary": "update job",
         "operationId": "slurm_v0040_post_job",
         "parameters": [
           {
             "in": "path",
             "name": "job_id",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Job ID",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_post_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_post_response"
                 }
               }
             },
             "description": "job update result"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_post_response"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_job_post_response"
                 }
               }
             },
             "description": "job update result"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg"
               }
             }
           },
           "description": "Job update description"
         }
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "cancel or signal job",
         "operationId": "slurm_v0040_delete_job",
         "parameters": [
           {
             "in": "path",
             "name": "job_id",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Job ID",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "signal",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Signal to send to Job",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Signalling flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "BATCH_JOB",
                 "ARRAY_TASK",
                 "FULL_STEPS_ONLY",
                 "FULL_JOB",
                 "FEDERATION_REQUEUE",
                 "HURRY",
                 "OUT_OF_MEMORY",
                 "NO_SIBLING_JOBS",
                 "RESERVATION_JOB",
                 "NO_CRON_JOBS",
                 "VERBOSE",
                 "CRON_JOBS",
                 "WARNING_SENT"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "job signal result"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "job signal result"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/nodes\/": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get node(s) info",
         "operationId": "slurm_v0040_get_nodes",
         "parameters": [
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter jobs since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                 }
               }
             },
             "description": "node(s) information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                 }
               }
             },
             "description": "node(s) information"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/node\/{node_name}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get node info",
         "operationId": "slurm_v0040_get_node",
         "parameters": [
           {
             "in": "path",
             "name": "node_name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Node name",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter jobs since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                 }
               }
             },
             "description": "node information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_nodes_resp"
                 }
               }
             },
             "description": "node information"
           }
         }
       },
       "post": {
         "tags": [
           "slurm"
         ],
         "summary": "update node properties",
         "operationId": "slurm_v0040_post_node",
         "parameters": [
           {
             "in": "path",
             "name": "node_name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Node name",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "node update request result"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "node update request result"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_update_node_msg"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_update_node_msg"
               }
             }
           },
           "description": "Node update description"
         }
       },
       "delete": {
         "tags": [
           "slurm"
         ],
         "summary": "delete node",
         "operationId": "slurm_v0040_delete_node",
         "parameters": [
           {
             "in": "path",
             "name": "node_name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Node name",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "node delete request result"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "node delete request result"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/partitions\/": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get all partition info",
         "operationId": "slurm_v0040_get_partitions",
         "parameters": [
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter partitions since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                 }
               }
             },
             "description": "partition information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                 }
               }
             },
             "description": "partition information"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/partition\/{partition_name}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get partition info",
         "operationId": "slurm_v0040_get_partition",
         "parameters": [
           {
             "in": "path",
             "name": "partition_name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Partition name",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter partitions since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                 }
               }
             },
             "description": "partition information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_partition_resp"
                 }
               }
             },
             "description": "partition information"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/reservations\/": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get all reservation info",
         "operationId": "slurm_v0040_get_reservations",
         "parameters": [
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter reservations since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                 }
               }
             },
             "description": "reservation information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                 }
               }
             },
             "description": "reservation information"
           }
         }
       }
     },
     "\/slurm\/v0.0.40\/reservation\/{reservation_name}": {
       "get": {
         "tags": [
           "slurm"
         ],
         "summary": "get reservation info",
         "operationId": "slurm_v0040_get_reservation",
         "parameters": [
           {
             "in": "path",
             "name": "reservation_name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Reservation name",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter reservations since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                 }
               }
             },
             "description": "reservation information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_reservation_resp"
                 }
               }
             },
             "description": "reservation information"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/job\/{job_id}": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get job info",
         "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
         "operationId": "slurmdb_v0040_get_job",
         "parameters": [
           {
             "in": "path",
             "name": "job_id",
             "style": "simple",
             "explode": false,
             "deprecated": true,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Job id",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                 }
               }
             },
             "description": "Job description"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                 }
               }
             },
             "description": "Job description"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/config": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Dump all configuration information",
         "operationId": "slurmdb_v0040_get_config",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
                 }
               }
             },
             "description": "slurmdbd configuration"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
                 }
               }
             },
             "description": "slurmdbd configuration"
           }
         }
       },
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Load all configuration information",
         "operationId": "slurmdb_v0040_post_config",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "slurmdbd configuration"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "slurmdbd configuration"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_config_resp"
               }
             }
           },
           "description": "Add or update config"
         }
       }
     },
     "\/slurmdb\/v0.0.40\/tres\/": {
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Add TRES",
         "operationId": "slurmdb_v0040_post_tres",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "TRES update result"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "TRES update result"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
               }
             }
           },
           "description": "TRES descriptions. Only works in developer mode."
         }
       },
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get TRES info",
         "operationId": "slurmdb_v0040_get_tres",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
                 }
               }
             },
             "description": "List of TRES"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_tres_resp"
                 }
               }
             },
             "description": "List of TRES"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/qos\/{qos}": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get QOS info",
         "operationId": "slurmdb_v0040_get_single_qos",
         "parameters": [
           {
             "in": "path",
             "name": "qos",
             "style": "simple",
             "explode": false,
             "deprecated": true,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "QOS name",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Query includes deleted QOS",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                 }
               }
             },
             "description": "QOS information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                 }
               }
             },
             "description": "QOS information"
           }
         }
       },
       "delete": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Delete QOS",
         "operationId": "slurmdb_v0040_delete_single_qos",
         "parameters": [
           {
             "in": "path",
             "name": "qos",
             "style": "simple",
             "explode": false,
             "deprecated": true,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "QOS name",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                 }
               }
             },
             "description": "results of ping test"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_removed_resp"
                 }
               }
             },
             "description": "results of ping test"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/qos\/": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get QOS list",
         "operationId": "slurmdb_v0040_get_qos",
         "parameters": [
           {
             "in": "query",
             "name": "description",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV description list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "name",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "preempt_mode",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "PreemptMode used when jobs in this QOS are preempted",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "DISABLED",
                 "SUSPEND",
                 "REQUEUE",
                 "CANCEL",
                 "GANG"
               ]
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted QOS",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                 }
               }
             },
             "description": "List of QOS"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
                 }
               }
             },
             "description": "List of QOS"
           }
         }
       },
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Add or update QOSs",
         "operationId": "slurmdb_v0040_post_qos",
         "parameters": [
           {
             "in": "query",
             "name": "description",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV description list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "name",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "preempt_mode",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "PreemptMode used when jobs in this QOS are preempted",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "DISABLED",
                 "SUSPEND",
                 "REQUEUE",
                 "CANCEL",
                 "GANG"
               ]
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted QOS",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "QOS update response"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "QOS update response"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_qos_resp"
               }
             }
           },
           "description": "Description of QOS to add or update"
         }
       }
     },
     "\/slurmdb\/v0.0.40\/associations\/": {
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Set associations info",
         "operationId": "slurmdb_v0040_post_associations",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "status of associations update"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "status of associations update"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
               }
             }
           },
           "description": "Job description"
         }
       },
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get association list",
         "operationId": "slurmdb_v0040_get_associations",
         "parameters": [
           {
             "in": "query",
             "name": "account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV accounts list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV clusters list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "default_qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "only_defaults",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Filter to only defaults",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "parent_account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV names of parent account",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "partition",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV partition name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "user",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV user list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_usage",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include usage",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted associations",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_raw_qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include a raw qos or delta_qos",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_sub_accts",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include sub acct information also",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "without_parent_info",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude parent id\/name",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "without_parent_limits",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude limits from parents",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                 }
               }
             },
             "description": "List of associations"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                 }
               }
             },
             "description": "List of associations"
           }
         }
       },
       "delete": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Delete associations",
         "operationId": "slurmdb_v0040_delete_associations",
         "parameters": [
           {
             "in": "query",
             "name": "account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV accounts list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV clusters list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "default_qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "only_defaults",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Filter to only defaults",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "parent_account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV names of parent account",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "partition",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV partition name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "user",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV user list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_usage",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include usage",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted associations",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_raw_qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include a raw qos or delta_qos",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_sub_accts",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include sub acct information also",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "without_parent_info",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude parent id\/name",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "without_parent_limits",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude limits from parents",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                 }
               }
             },
             "description": "List of associations deleted"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                 }
               }
             },
             "description": "List of associations deleted"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/association\/": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get association info",
         "operationId": "slurmdb_v0040_get_association",
         "parameters": [
           {
             "in": "query",
             "name": "account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV accounts list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV clusters list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "default_qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "only_defaults",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Filter to only defaults",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "parent_account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV names of parent account",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "partition",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV partition name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "user",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV user list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_usage",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include usage",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted associations",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_raw_qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include a raw qos or delta_qos",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_sub_accts",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include sub acct information also",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "without_parent_info",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude parent id\/name",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "without_parent_limits",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude limits from parents",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                 }
               }
             },
             "description": "List of associations"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_resp"
                 }
               }
             },
             "description": "List of associations"
           }
         }
       },
       "delete": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Delete association",
         "operationId": "slurmdb_v0040_delete_association",
         "parameters": [
           {
             "in": "query",
             "name": "account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV accounts list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV clusters list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "default_qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "only_defaults",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Filter to only defaults",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "parent_account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV names of parent account",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "partition",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV partition name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "user",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV user list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_usage",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include usage",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted associations",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_raw_qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include a raw qos or delta_qos",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_sub_accts",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include sub acct information also",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "without_parent_info",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude parent id\/name",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "without_parent_limits",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude limits from parents",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                 }
               }
             },
             "description": "Status of associations delete request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_assocs_removed_resp"
                 }
               }
             },
             "description": "Status of associations delete request"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/instances\/": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get instance list",
         "operationId": "slurmdb_v0040_get_instances",
         "parameters": [
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV clusters list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "extra",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV extra list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "instance_id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV instance_id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "instance_type",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV instance_type list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "node_list",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Ranged node string",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "time_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Time end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "time_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Time start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                 }
               }
             },
             "description": "List of instances"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                 }
               }
             },
             "description": "List of instances"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/instance\/": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get instance info",
         "operationId": "slurmdb_v0040_get_instance",
         "parameters": [
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV clusters list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "extra",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV extra list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "instance_id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV instance_id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "instance_type",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV instance_type list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "node_list",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Ranged node string",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "time_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Time end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "time_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Time start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                 }
               }
             },
             "description": "List of instances"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_instances_resp"
                 }
               }
             },
             "description": "List of instances"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/user\/{name}": {
       "delete": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Delete user",
         "operationId": "slurmdb_v0040_delete_user",
         "parameters": [
           {
             "in": "path",
             "name": "name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "User name",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Result of user delete request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Result of user delete request"
           }
         }
       },
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get user info",
         "operationId": "slurmdb_v0040_get_user",
         "parameters": [
           {
             "in": "path",
             "name": "name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "User name",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted users",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_assocs",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include associations",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_coords",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include coordinators",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_wckeys",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include wckeys",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                 }
               }
             },
             "description": "List of users"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                 }
               }
             },
             "description": "List of users"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/users_association\/": {
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Add users with conditional association",
         "operationId": "slurmdb_v0040_post_users_association",
         "parameters": [
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter partitions since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ]
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp_str"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp_str"
                 }
               }
             },
             "description": "Add list of users with conditional association"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp_str"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp_str"
                 }
               }
             },
             "description": "Add list of users with conditional association"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_add_cond_resp"
               }
             }
           },
           "description": "Create users with conditional association"
         }
       }
     },
     "\/slurmdb\/v0.0.40\/users\/": {
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Update users",
         "operationId": "slurmdb_v0040_post_users",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Status of user update request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Status of user update request"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
               }
             }
           },
           "description": "add or update user"
         }
       },
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get user list",
         "operationId": "slurmdb_v0040_get_users",
         "parameters": [
           {
             "in": "query",
             "name": "admin_level",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Administrator level",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "Not Set",
                 "None",
                 "Operator",
                 "Administrator"
               ]
             }
           },
           {
             "in": "query",
             "name": "default_account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV default account list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "default_wckey",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV default wckey list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_assocs",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "With associations",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_coords",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "With coordinators",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "With deleted",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_wckeys",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "With wckeys",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "without_defaults",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude defaults",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                 }
               }
             },
             "description": "List of users"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_users_resp"
                 }
               }
             },
             "description": "List of users"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/cluster\/{cluster_name}": {
       "delete": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Delete cluster",
         "operationId": "slurmdb_v0040_delete_cluster",
         "parameters": [
           {
             "in": "path",
             "name": "cluster_name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Cluster name",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "classification",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Type of machine",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "UNCLASSIFIED",
                 "CAPABILITY",
                 "CAPACITY",
                 "CAPAPACITY (both CAPABILITY and CAPACITY)"
               ]
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV cluster list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "federation",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV federation list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "REGISTERING",
                 "MULTIPLE_SLURMD",
                 "FRONT_END",
                 "FEDERATION",
                 "EXTERNAL"
               ]
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "rpc_version",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV RPC version list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted clusters",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_usage",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include usage",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_removed_resp"
                 }
               }
             },
             "description": "Result of delete cluster request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_removed_resp"
                 }
               }
             },
             "description": "Result of delete cluster request"
           }
         }
       },
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get cluster info",
         "operationId": "slurmdb_v0040_get_cluster",
         "parameters": [
           {
             "in": "path",
             "name": "cluster_name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Cluster name",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "classification",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Type of machine",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "UNCLASSIFIED",
                 "CAPABILITY",
                 "CAPACITY",
                 "CAPAPACITY (both CAPABILITY and CAPACITY)"
               ]
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV cluster list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "federation",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV federation list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "flags",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Query flags",
             "required": false,
             "schema": {
               "type": "string",
               "enum": [
                 "REGISTERING",
                 "MULTIPLE_SLURMD",
                 "FRONT_END",
                 "FEDERATION",
                 "EXTERNAL"
               ]
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "rpc_version",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV RPC version list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted clusters",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_usage",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include usage",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                 }
               }
             },
             "description": "Cluster information"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                 }
               }
             },
             "description": "Cluster information"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/clusters\/": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get cluster list",
         "operationId": "slurmdb_v0040_get_clusters",
         "parameters": [
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter reservations since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                 }
               }
             },
             "description": "List of clusters"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
                 }
               }
             },
             "description": "List of clusters"
           }
         }
       },
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get cluster list",
         "operationId": "slurmdb_v0040_post_clusters",
         "parameters": [
           {
             "in": "query",
             "name": "update_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Filter reservations since update timestamp",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Result of modify clusters request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Result of modify clusters request"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_clusters_resp"
               }
             }
           },
           "description": "Cluster add or update descriptions"
         }
       }
     },
     "\/slurmdb\/v0.0.40\/wckey\/{id}": {
       "delete": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Delete wckey",
         "operationId": "slurmdb_v0040_delete_wckey",
         "parameters": [
           {
             "in": "path",
             "name": "id",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "wckey id",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_removed_resp"
                 }
               }
             },
             "description": "Result of wckey deletion request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_removed_resp"
                 }
               }
             },
             "description": "Result of wckey deletion request"
           }
         }
       },
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get wckey info",
         "operationId": "slurmdb_v0040_get_wckey",
         "parameters": [
           {
             "in": "path",
             "name": "id",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "wckey id",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                 }
               }
             },
             "description": "Description of wckey"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                 }
               }
             },
             "description": "Description of wckey"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/wckeys\/": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get wckey list",
         "operationId": "slurmdb_v0040_get_wckeys",
         "parameters": [
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV cluster name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "name",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "only_defaults",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Only query defaults",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "user",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV user list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_usage",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include usage",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted wckeys",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                 }
               }
             },
             "description": "List of wckeys"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
                 }
               }
             },
             "description": "List of wckeys"
           }
         }
       },
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Add or update wckeys",
         "operationId": "slurmdb_v0040_post_wckeys",
         "parameters": [
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV cluster name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "name",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "only_defaults",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Only query defaults",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_end",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_start",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "user",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV user list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_usage",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include usage",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted wckeys",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Result of wckey addition or update request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Result of wckey addition or update request"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_wckey_resp"
               }
             }
           },
           "description": "wckeys description"
         }
       }
     },
     "\/slurmdb\/v0.0.40\/account\/{account_name}": {
       "delete": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Delete account",
         "operationId": "slurmdb_v0040_delete_account",
         "parameters": [
           {
             "in": "path",
             "name": "account_name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Account name",
             "required": true,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_removed_resp"
                 }
               }
             },
             "description": "Status of account deletion request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_removed_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_removed_resp"
                 }
               }
             },
             "description": "Status of account deletion request"
           }
         }
       },
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get account info",
         "operationId": "slurmdb_v0040_get_account",
         "parameters": [
           {
             "in": "path",
             "name": "account_name",
             "style": "simple",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Account name",
             "required": true,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_assocs",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include associations",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_coords",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include coordinators",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                 }
               }
             },
             "description": "List of accounts"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                 }
               }
             },
             "description": "List of accounts"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/accounts_association\/": {
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Add accounts with conditional association",
         "operationId": "slurmdb_v0040_post_accounts_association",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp_str"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp_str"
                 }
               }
             },
             "description": "Status of account addition request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp_str"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp_str"
                 }
               }
             },
             "description": "Status of account addition request"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_add_cond_resp"
               }
             }
           },
           "description": "Add list of accounts with conditional association"
         }
       }
     },
     "\/slurmdb\/v0.0.40\/accounts\/": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get account list",
         "operationId": "slurmdb_v0040_get_accounts",
         "parameters": [
           {
             "in": "query",
             "name": "description",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV description list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_assocs",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include associations",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_coords",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include coordinators",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "with_deleted",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include deleted accounts",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                 }
               }
             },
             "description": "List of accounts"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
                 }
               }
             },
             "description": "List of accounts"
           }
         }
       },
       "post": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Add\/update list of accounts",
         "operationId": "slurmdb_v0040_post_accounts",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Status of account update request"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_resp"
                 }
               }
             },
             "description": "Status of account update request"
           }
         },
         "requestBody": {
           "content": {
             "application\/json": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
               }
             },
             "application\/x-yaml": {
               "schema": {
                 "$ref": "#\/components\/schemas\/v0.0.40_openapi_accounts_resp"
               }
             }
           },
           "description": "Description of accounts to update\/create"
         }
       }
     },
     "\/slurmdb\/v0.0.40\/jobs\/": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get job list",
         "operationId": "slurmdb_v0040_get_jobs",
         "parameters": [
           {
             "in": "query",
             "name": "account",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV account list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "association",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV association list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cluster",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV cluster list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "constraints",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV constraint list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cpus_max",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Maximum number of cpus",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "cpus_min",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Minimum number of cpus",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "scheduler_unset",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Schedule bits not set",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "scheduled_on_submit",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Job was started on submit",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "scheduled_by_main",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Job was started from main scheduler",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "scheduled_by_backfill",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Job was started from backfill",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "job_started",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Job start RPC was received",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "exit_code",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Job exit code (numeric)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "show_duplicates",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include duplicate job entries",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "skip_steps",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Exclude job step details",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "disable_truncate_usage_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Do not truncate the time to usage_start and usage_end",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "whole_hetjob",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include details on all hetjob components",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "disable_whole_hetjob",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Only show details on specified hetjob components",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "disable_wait_for_result",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Tell dbd not to wait for the result",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "usage_time_as_submit_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Use usage_time as the submit_time of the job",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "show_batch_script",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include job script",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "show_job_environment",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": true,
             "allowReserved": false,
             "description": "Include job environment",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "format",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV format list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "groups",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV group list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "job_name",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV job name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "nodes_max",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Maximum number of nodes",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "nodes_min",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Minimum number of nodes",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "partition",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV partition name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "qos",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV QOS name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "reason",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV reason list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "reservation",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV reservation name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "reservation_id",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV reservation ID list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "state",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV state list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "step",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV step id list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "timelimit_max",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Maximum timelimit (seconds)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "timelimit_min",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Minimum timelimit (seconds)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "end_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage end (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "start_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Usage start (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "submit_time",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Submit time (UNIX timestamp)",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "node",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "Ranged node string where jobs ran",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "users",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV user name list",
             "required": false,
             "schema": {
               "type": "string"
             }
           },
           {
             "in": "query",
             "name": "wckey",
             "style": "form",
             "explode": false,
             "deprecated": false,
             "allowEmptyValue": false,
             "allowReserved": false,
             "description": "CSV wckey list",
             "required": false,
             "schema": {
               "type": "string"
             }
           }
         ],
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                 }
               }
             },
             "description": "List of jobs"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_jobs_resp"
                 }
               }
             },
             "description": "List of jobs"
           }
         }
       }
     },
     "\/slurmdb\/v0.0.40\/diag\/": {
       "get": {
         "tags": [
           "slurmdb"
         ],
         "summary": "Get slurmdb diagnostics",
         "operationId": "slurmdb_v0040_get_diag",
         "responses": {
           "200": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_stats_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_stats_resp"
                 }
               }
             },
             "description": "Dictionary of statistics"
           },
           "default": {
             "content": {
               "application\/json": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_stats_resp"
                 }
               },
               "application\/x-yaml": {
                 "schema": {
                   "$ref": "#\/components\/schemas\/v0.0.40_openapi_slurmdbd_stats_resp"
                 }
               }
             },
             "description": "Dictionary of statistics"
           }
         }
       }
     }
   },
   "components": {
     "schemas": {
       "v0.0.40_openapi_shares_resp": {
         "type": "object",
         "properties": {
           "shares": {
             "$ref": "#\/components\/schemas\/v0.0.40_shares_resp_msg",
             "description": "fairshare info"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "shares"
         ]
       },
       "v0.0.40_shares_resp_msg": {
         "type": "object",
         "properties": {
           "shares": {
             "$ref": "#\/components\/schemas\/v0.0.40_assoc_shares_obj_list",
             "description": "Association shares"
           },
           "total_shares": {
             "type": "integer",
             "format": "int64",
             "description": "Total number of shares"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_assoc_shares_obj_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_assoc_shares_obj_wrap"
         }
       },
       "v0.0.40_assoc_shares_obj_wrap": {
         "type": "object",
         "properties": {
           "id": {
             "type": "integer",
             "format": "int32",
             "description": "Association ID"
           },
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "name": {
             "type": "string",
             "description": "Share name"
           },
           "parent": {
             "type": "string",
             "description": "Parent name"
           },
           "partition": {
             "type": "string",
             "description": "Partition name"
           },
           "shares_normalized": {
             "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val",
             "description": "Normalized shares"
           },
           "shares": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Number of shares allocated"
           },
           "tres": {
             "type": "object",
             "properties": {
               "run_seconds": {
                 "$ref": "#\/components\/schemas\/v0.0.40_shares_uint64_tres_list",
                 "description": "Currently running tres-secs = grp_used_tres_run_secs"
               },
               "group_minutes": {
                 "$ref": "#\/components\/schemas\/v0.0.40_shares_uint64_tres_list",
                 "description": "TRES-minute limit"
               },
               "usage": {
                 "$ref": "#\/components\/schemas\/v0.0.40_shares_float128_tres_list",
                 "description": "Measure of each TRES usage"
               }
             }
           },
           "effective_usage": {
             "type": "number",
             "format": "double",
             "description": "Effective, normalized usage"
           },
           "usage_normalized": {
             "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val",
             "description": "Normalized usage"
           },
           "usage": {
             "type": "integer",
             "format": "int64",
             "description": "Measure of tresbillableunits usage"
           },
           "fairshare": {
             "type": "object",
             "properties": {
               "factor": {
                 "type": "number",
                 "format": "double",
                 "description": "Fairshare factor"
               },
               "level": {
                 "type": "number",
                 "format": "double",
                 "description": "Fairshare factor at this level; stored on an assoc as a long double, but that is not needed for display in sshare"
               }
             }
           },
           "type": {
             "type": "array",
             "description": "User or account association",
             "items": {
               "enum": [
                 "USER",
                 "ASSOCIATION"
               ],
               "type": "string"
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.40_float64_no_val": {
         "type": "object",
         "description": "64 bit floating point number with flags",
         "properties": {
           "set": {
             "type": "boolean",
             "description": "True if number has been set. False if number is unset",
             "default": false
           },
           "infinite": {
             "type": "boolean",
             "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
             "default": 0.0
           },
           "number": {
             "type": "number",
             "format": "double",
             "description": "If set is True the number will be set with value. Otherwise ignore number contents."
           }
         }
       },
       "v0.0.40_uint32_no_val": {
         "type": "object",
         "description": "Integer number with flags",
         "properties": {
           "set": {
             "type": "boolean",
             "description": "True if number has been set. False if number is unset",
             "default": false
           },
           "infinite": {
             "type": "boolean",
             "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
             "default": 0
           },
           "number": {
             "type": "integer",
             "format": "int64",
             "description": "If set is True the number will be set with value. Otherwise ignore number contents."
           }
         }
       },
       "v0.0.40_shares_uint64_tres_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_shares_uint64_tres"
         }
       },
       "v0.0.40_shares_uint64_tres": {
         "type": "object",
         "properties": {
           "name": {
             "type": "string",
             "description": "TRES name"
           },
           "value": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "TRES value"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_uint64_no_val": {
         "type": "object",
         "description": "Integer number with flags",
         "properties": {
           "set": {
             "type": "boolean",
             "description": "True if number has been set. False if number is unset",
             "default": false
           },
           "infinite": {
             "type": "boolean",
             "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
             "default": 0
           },
           "number": {
             "type": "integer",
             "format": "int64",
             "description": "If set is True the number will be set with value. Otherwise ignore number contents."
           }
         }
       },
       "v0.0.40_shares_float128_tres_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_shares_float128_tres"
         }
       },
       "v0.0.40_shares_float128_tres": {
         "type": "object",
         "properties": {
           "name": {
             "type": "string",
             "description": "TRES name"
           },
           "value": {
             "type": "number",
             "description": "TRES value"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_meta": {
         "type": "object",
         "properties": {
           "plugin": {
             "type": "object",
             "properties": {
               "type": {
                 "type": "string",
                 "description": "Slurm plugin type (if applicable)"
               },
               "name": {
                 "type": "string",
                 "description": "Slurm plugin name (if applicable)"
               },
               "data_parser": {
                 "type": "string",
                 "description": "Slurm data_parser plugin"
               },
               "accounting_storage": {
                 "type": "string",
                 "description": "Slurm accounting plugin"
               }
             }
           },
           "client": {
             "type": "object",
             "properties": {
               "source": {
                 "type": "string",
                 "description": "Client source description"
               },
               "user": {
                 "type": "string",
                 "description": "Client user (if known)"
               },
               "group": {
                 "type": "string",
                 "description": "Client group (if known)"
               }
             }
           },
           "command": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_array",
             "description": "CLI command (if applicable)"
           },
           "slurm": {
             "type": "object",
             "properties": {
               "version": {
                 "type": "object",
                 "properties": {
                   "major": {
                     "type": "string",
                     "description": "Slurm release major version"
                   },
                   "micro": {
                     "type": "string",
                     "description": "Slurm release micro version"
                   },
                   "minor": {
                     "type": "string",
                     "description": "Slurm release minor version"
                   }
                 }
               },
               "release": {
                 "type": "string",
                 "description": "Slurm release string"
               },
               "cluster": {
                 "type": "string",
                 "description": "Slurm cluster name"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.40_string_array": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.40_openapi_errors": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_openapi_error"
         }
       },
       "v0.0.40_openapi_error": {
         "type": "object",
         "properties": {
           "description": {
             "type": "string",
             "description": "Long form error description"
           },
           "error_number": {
             "type": "integer",
             "format": "int32",
             "description": "Slurm numeric error identifier"
           },
           "error": {
             "type": "string",
             "description": "Short form error description"
           },
           "source": {
             "type": "string",
             "description": "Source of error or where error was first detected"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_warnings": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_openapi_warning"
         }
       },
       "v0.0.40_openapi_warning": {
         "type": "object",
         "properties": {
           "description": {
             "type": "string",
             "description": "Long form warning description"
           },
           "source": {
             "type": "string",
             "description": "Source of warning or where warning was first detected"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_resp": {
         "type": "object",
         "properties": {
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_diag_resp": {
         "type": "object",
         "properties": {
           "statistics": {
             "$ref": "#\/components\/schemas\/v0.0.40_stats_msg",
             "description": "statistics"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "statistics"
         ]
       },
       "v0.0.40_stats_msg": {
         "type": "object",
         "properties": {
           "parts_packed": {
             "type": "integer",
             "format": "int32",
             "description": "Zero if only RPC statistic included"
           },
           "req_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "When the request was made (UNIX timestamp)"
           },
           "req_time_start": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "When the data in the report started (UNIX timestamp)"
           },
           "server_thread_count": {
             "type": "integer",
             "format": "int32",
             "description": "Number of current active slurmctld threads"
           },
           "agent_queue_size": {
             "type": "integer",
             "format": "int32",
             "description": "Number of enqueued outgoing RPC requests in an internal retry list"
           },
           "agent_count": {
             "type": "integer",
             "format": "int32",
             "description": "Number of agent threads"
           },
           "agent_thread_count": {
             "type": "integer",
             "format": "int32",
             "description": "Total number of active threads created by all agent threads"
           },
           "dbd_agent_queue_size": {
             "type": "integer",
             "format": "int32",
             "description": "Number of messages for SlurmDBD that are queued"
           },
           "gettimeofday_latency": {
             "type": "integer",
             "format": "int32",
             "description": "Latency of 1000 calls to the gettimeofday() syscall in microseconds, as measured at controller startup"
           },
           "schedule_cycle_max": {
             "type": "integer",
             "format": "int32",
             "description": "Max time of any scheduling cycle in microseconds since last reset"
           },
           "schedule_cycle_last": {
             "type": "integer",
             "format": "int32",
             "description": "Time in microseconds for last scheduling cycle"
           },
           "schedule_cycle_total": {
             "type": "integer",
             "format": "int32",
             "description": "Number of scheduling cycles since last reset"
           },
           "schedule_cycle_mean": {
             "type": "integer",
             "format": "int64",
             "description": "Mean time in microseconds for all scheduling cycles since last reset"
           },
           "schedule_cycle_mean_depth": {
             "type": "integer",
             "format": "int64",
             "description": "Mean of the number of jobs processed in a scheduling cycle"
           },
           "schedule_cycle_per_minute": {
             "type": "integer",
             "format": "int64",
             "description": "Number of scheduling executions per minute"
           },
           "schedule_queue_length": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs pending in queue"
           },
           "schedule_exit": {
             "$ref": "#\/components\/schemas\/v0.0.40_schedule_exit_fields",
             "description": "Reasons for which the scheduling cycle exited since last reset"
           },
           "jobs_submitted": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs submitted since last reset"
           },
           "jobs_started": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs started since last reset"
           },
           "jobs_completed": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs completed since last reset"
           },
           "jobs_canceled": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs canceled since the last reset"
           },
           "jobs_failed": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs failed due to slurmd or other internal issues since last reset"
           },
           "jobs_pending": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs pending at the time of listed in job_state_ts"
           },
           "jobs_running": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs running at the time of listed in job_state_ts"
           },
           "job_states_ts": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "When the job state counts were gathered (UNIX timestamp)"
           },
           "bf_backfilled_jobs": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs started through backfilling since last slurm start"
           },
           "bf_last_backfilled_jobs": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs started through backfilling since last reset"
           },
           "bf_backfilled_het_jobs": {
             "type": "integer",
             "format": "int32",
             "description": "Number of heterogeneous job components started through backfilling since last Slurm start"
           },
           "bf_cycle_counter": {
             "type": "integer",
             "format": "int32",
             "description": "Number of backfill scheduling cycles since last reset"
           },
           "bf_cycle_mean": {
             "type": "integer",
             "format": "int64",
             "description": "Mean time in microseconds of backfilling scheduling cycles since last reset"
           },
           "bf_depth_mean": {
             "type": "integer",
             "format": "int64",
             "description": "Mean number of eligible to run jobs processed during all backfilling scheduling cycles since last reset"
           },
           "bf_depth_mean_try": {
             "type": "integer",
             "format": "int64",
             "description": "The subset of Depth Mean that the backfill scheduler attempted to schedule"
           },
           "bf_cycle_sum": {
             "type": "integer",
             "format": "int64",
             "description": "Total time in microseconds of backfilling scheduling cycles since last reset"
           },
           "bf_cycle_last": {
             "type": "integer",
             "format": "int32",
             "description": "Execution time in microseconds of last backfill scheduling cycle"
           },
           "bf_last_depth": {
             "type": "integer",
             "format": "int32",
             "description": "Number of processed jobs during last backfilling scheduling cycle"
           },
           "bf_last_depth_try": {
             "type": "integer",
             "format": "int32",
             "description": "Number of processed jobs during last backfilling scheduling cycle that had a chance to start using available resources"
           },
           "bf_depth_sum": {
             "type": "integer",
             "format": "int32",
             "description": "Total number of jobs processed during all backfilling scheduling cycles since last reset"
           },
           "bf_depth_try_sum": {
             "type": "integer",
             "format": "int32",
             "description": "Subset of bf_depth_sum that the backfill scheduler attempted to schedule"
           },
           "bf_queue_len": {
             "type": "integer",
             "format": "int32",
             "description": "Number of jobs pending to be processed by backfilling algorithm"
           },
           "bf_queue_len_mean": {
             "type": "integer",
             "format": "int64",
             "description": "Mean number of jobs pending to be processed by backfilling algorithm"
           },
           "bf_queue_len_sum": {
             "type": "integer",
             "format": "int32",
             "description": "Total number of jobs pending to be processed by backfilling algorithm since last reset"
           },
           "bf_table_size": {
             "type": "integer",
             "format": "int32",
             "description": "Number of different time slots tested by the backfill scheduler in its last iteration"
           },
           "bf_table_size_mean": {
             "type": "integer",
             "format": "int64",
             "description": "Mean number of different time slots tested by the backfill scheduler"
           },
           "bf_when_last_cycle": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "When the last backfill scheduling cycle happened (UNIX timestamp)"
           },
           "bf_active": {
             "type": "boolean",
             "description": "Backfill scheduler currently running"
           },
           "bf_exit": {
             "$ref": "#\/components\/schemas\/v0.0.40_bf_exit_fields",
             "description": "Reasons for which the backfill scheduling cycle exited since last reset"
           },
           "rpcs_by_message_type": {
             "$ref": "#\/components\/schemas\/v0.0.40_stats_msg_rpcs_by_type",
             "description": "Most frequently issued remote procedure calls (RPCs)"
           },
           "rpcs_by_user": {
             "$ref": "#\/components\/schemas\/v0.0.40_stats_msg_rpcs_by_user",
             "description": "RPCs issued by user ID"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_schedule_exit_fields": {
         "type": "object",
         "properties": {
           "end_job_queue": {
             "type": "integer",
             "format": "int32",
             "description": "Reached end of queue"
           },
           "default_queue_depth": {
             "type": "integer",
             "format": "int32",
             "description": "Reached number of jobs allowed to be tested"
           },
           "max_job_start": {
             "type": "integer",
             "format": "int32",
             "description": "Reached number of jobs allowed to start"
           },
           "max_rpc_cnt": {
             "type": "integer",
             "format": "int32",
             "description": "Reached RPC limit"
           },
           "max_sched_time": {
             "type": "integer",
             "format": "int32",
             "description": "Reached maximum allowed scheduler time"
           },
           "licenses": {
             "type": "integer",
             "format": "int32",
             "description": "Blocked on licenses"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_bf_exit_fields": {
         "type": "object",
         "properties": {
           "end_job_queue": {
             "type": "integer",
             "format": "int32",
             "description": "Reached end of queue"
           },
           "bf_max_job_start": {
             "type": "integer",
             "format": "int32",
             "description": "Reached number of jobs allowed to start"
           },
           "bf_max_job_test": {
             "type": "integer",
             "format": "int32",
             "description": "Reached number of jobs allowed to be tested"
           },
           "bf_max_time": {
             "type": "integer",
             "format": "int32",
             "description": "Reached maximum allowed scheduler time"
           },
           "bf_node_space_size": {
             "type": "integer",
             "format": "int32",
             "description": "Reached table size limit"
           },
           "state_changed": {
             "type": "integer",
             "format": "int32",
             "description": "System state changed"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_stats_msg_rpcs_by_type": {
         "type": "array",
         "description": "RPCs by message type",
         "items": {
           "type": "object",
           "description": "RPC",
           "properties": {
             "message_type": {
               "type": "string",
               "description": "Message type as string"
             },
             "type_id": {
               "type": "integer",
               "format": "int32",
               "description": "Message type as integer"
             },
             "count": {
               "type": "integer",
               "format": "int64",
               "description": "Number of RPCs received"
             },
             "average_time": {
               "type": "integer",
               "format": "int64",
               "description": "Average time spent processing RPC in seconds"
             },
             "total_time": {
               "type": "integer",
               "format": "int64",
               "description": "Total time spent processing RPC in seconds"
             }
           }
         }
       },
       "v0.0.40_stats_msg_rpcs_by_user": {
         "type": "array",
         "description": "RPCs by user",
         "items": {
           "type": "object",
           "description": "user",
           "properties": {
             "user": {
               "type": "string",
               "description": "user name"
             },
             "user_id": {
               "type": "integer",
               "format": "int32",
               "description": "user id (numeric)"
             },
             "count": {
               "type": "integer",
               "format": "int64",
               "description": "Number of RPCs received"
             },
             "average_time": {
               "type": "integer",
               "format": "int64",
               "description": "Average time spent processing RPC in seconds"
             },
             "total_time": {
               "type": "integer",
               "format": "int64",
               "description": "Total time spent processing RPC in seconds"
             }
           }
         }
       },
       "v0.0.40_openapi_ping_array_resp": {
         "type": "object",
         "properties": {
           "pings": {
             "$ref": "#\/components\/schemas\/v0.0.40_controller_ping_array",
             "description": "pings"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "pings"
         ]
       },
       "v0.0.40_controller_ping_array": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_controller_ping"
         }
       },
       "v0.0.40_controller_ping": {
         "type": "object",
         "properties": {
           "hostname": {
             "type": "string",
             "description": "Target for ping"
           },
           "pinged": {
             "type": "string",
             "description": "Ping result"
           },
           "latency": {
             "type": "integer",
             "format": "int64",
             "description": "Number of microseconds it took to successfully ping or timeout"
           },
           "mode": {
             "type": "string",
             "description": "The operating mode of the responding slurmctld"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_licenses_resp": {
         "type": "object",
         "properties": {
           "licenses": {
             "$ref": "#\/components\/schemas\/v0.0.40_licenses",
             "description": "List of licenses"
           },
           "last_update": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time of last licenses change (UNIX timestamp)"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "licenses",
           "last_update"
         ]
       },
       "v0.0.40_licenses": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_license"
         }
       },
       "v0.0.40_license": {
         "type": "object",
         "properties": {
           "LicenseName": {
             "type": "string",
             "description": "Name of the license"
           },
           "Total": {
             "type": "integer",
             "format": "int32",
             "description": "Total number of licenses present"
           },
           "Used": {
             "type": "integer",
             "format": "int32",
             "description": "Number of licenses in use"
           },
           "Free": {
             "type": "integer",
             "format": "int32",
             "description": "Number of licenses currently available"
           },
           "Remote": {
             "type": "boolean",
             "description": "Indicates whether licenses are served by the database"
           },
           "Reserved": {
             "type": "integer",
             "format": "int32",
             "description": "Number of licenses reserved"
           },
           "LastConsumed": {
             "type": "integer",
             "format": "int32",
             "description": "Last known number of licenses that were consumed in the license manager (Remote Only)"
           },
           "LastDeficit": {
             "type": "integer",
             "format": "int32",
             "description": "Number of \"missing licenses\" from the cluster's perspective"
           },
           "LastUpdate": {
             "type": "integer",
             "format": "int64",
             "description": "When the license information was last updated (UNIX Timestamp)"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_job_submit_response": {
         "type": "object",
         "properties": {
           "result": {
             "$ref": "#\/components\/schemas\/v0.0.40_job_submit_response_msg",
             "description": "Job submission"
           },
           "job_id": {
             "type": "integer",
             "format": "int32",
             "description": "Submitted Job ID"
           },
           "step_id": {
             "type": "string",
             "description": "Submitted Step ID"
           },
           "job_submit_user_msg": {
             "type": "string",
             "description": "job submision user message"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_job_submit_response_msg": {
         "type": "object",
         "properties": {
           "job_id": {
             "type": "integer",
             "format": "int32",
             "description": "New job ID"
           },
           "step_id": {
             "type": "string",
             "description": "New job step ID"
           },
           "error_code": {
             "type": "integer",
             "format": "int32",
             "description": "Error code"
           },
           "error": {
             "type": "string",
             "description": "Error message"
           },
           "job_submit_user_msg": {
             "type": "string",
             "description": "Message to user from job_submit plugin"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_job_submit_req": {
         "type": "object",
         "properties": {
           "script": {
             "type": "string",
             "description": "Batch job script; must be specified in first component of jobs or in job if this field is not populated"
           },
           "jobs": {
             "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg_list",
             "description": "HetJob description"
           },
           "job": {
             "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg",
             "description": "Job description"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_job_desc_msg_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_job_desc_msg"
         }
       },
       "v0.0.40_job_desc_msg": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string",
             "description": "Account associated with the job"
           },
           "account_gather_frequency": {
             "type": "string",
             "description": "Job accounting and profiling sampling intervals in seconds"
           },
           "admin_comment": {
             "type": "string",
             "description": "Arbitrary comment made by administrator"
           },
           "allocation_node_list": {
             "type": "string",
             "description": "Local node making the resource allocation"
           },
           "allocation_node_port": {
             "type": "integer",
             "format": "int32",
             "description": "Port to send allocation confirmation to"
           },
           "argv": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_array",
             "description": "Arguments to the script"
           },
           "array": {
             "type": "string",
             "description": "Job array index value specification"
           },
           "batch_features": {
             "type": "string",
             "description": "Features required for batch script's node"
           },
           "begin_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Defer the allocation of the job until the specified time (UNIX timestamp)"
           },
           "flags": {
             "type": "array",
             "description": "Job flags",
             "items": {
               "enum": [
                 "KILL_INVALID_DEPENDENCY",
                 "NO_KILL_INVALID_DEPENDENCY",
                 "HAS_STATE_DIRECTORY",
                 "TESTING_BACKFILL",
                 "GRES_BINDING_ENFORCED",
                 "TEST_NOW_ONLY",
                 "SEND_JOB_ENVIRONMENT",
                 "SPREAD_JOB",
                 "PREFER_MINIMUM_NODE_COUNT",
                 "JOB_KILL_HURRY",
                 "SKIP_TRES_STRING_ACCOUNTING",
                 "SIBLING_CLUSTER_UPDATE_ONLY",
                 "HETEROGENEOUS_JOB",
                 "EXACT_TASK_COUNT_REQUESTED",
                 "EXACT_CPU_COUNT_REQUESTED",
                 "TESTING_WHOLE_NODE_BACKFILL",
                 "TOP_PRIORITY_JOB",
                 "ACCRUE_COUNT_CLEARED",
                 "GRES_BINDING_DISABLED",
                 "JOB_WAS_RUNNING",
                 "JOB_ACCRUE_TIME_RESET",
                 "CRON_JOB",
                 "EXACT_MEMORY_REQUESTED",
                 "USING_DEFAULT_ACCOUNT",
                 "USING_DEFAULT_PARTITION",
                 "USING_DEFAULT_QOS",
                 "USING_DEFAULT_WCKEY",
                 "DEPENDENT",
                 "MAGNETIC",
                 "PARTITION_ASSIGNED",
                 "BACKFILL_ATTEMPTED",
                 "SCHEDULING_ATTEMPTED",
                 "SAVE_BATCH_SCRIPT",
                 "GRES_ONE_TASK_PER_SHARING",
                 "GRES_MULTIPLE_TASKS_PER_SHARING",
                 "GRES_ALLOW_TASK_SHARING"
               ],
               "type": "string"
             }
           },
           "burst_buffer": {
             "type": "string",
             "description": "Burst buffer specifications"
           },
           "clusters": {
             "type": "string",
             "description": "Clusters that a federated job can run on"
           },
           "cluster_constraint": {
             "type": "string",
             "description": "Required features that a federated cluster must have to have a sibling job submitted to it"
           },
           "comment": {
             "type": "string",
             "description": "Arbitrary comment made by user"
           },
           "contiguous": {
             "type": "boolean",
             "description": "True if job requires contiguous nodes"
           },
           "container": {
             "type": "string",
             "description": "Absolute path to OCI container bundle"
           },
           "container_id": {
             "type": "string",
             "description": "OCI container ID"
           },
           "cores_per_socket": {
             "type": "integer",
             "format": "int32",
             "description": "Cores per socket required"
           },
           "core_specification": {
             "type": "integer",
             "format": "int32",
             "description": "Specialized core count"
           },
           "thread_specification": {
             "type": "integer",
             "format": "int32",
             "description": "Specialized thread count"
           },
           "cpu_binding": {
             "type": "string",
             "description": "Method for binding tasks to allocated CPUs"
           },
           "cpu_binding_flags": {
             "type": "array",
             "description": "Flags for CPU binding",
             "items": {
               "enum": [
                 "CPU_BIND_TO_THREADS",
                 "CPU_BIND_TO_CORES",
                 "CPU_BIND_TO_SOCKETS",
                 "CPU_BIND_TO_LDOMS",
                 "CPU_BIND_NONE",
                 "CPU_BIND_RANK",
                 "CPU_BIND_MAP",
                 "CPU_BIND_MASK",
                 "CPU_BIND_LDRANK",
                 "CPU_BIND_LDMAP",
                 "CPU_BIND_LDMASK",
                 "VERBOSE",
                 "CPU_BIND_ONE_THREAD_PER_CORE"
               ],
               "type": "string"
             }
           },
           "cpu_frequency": {
             "type": "string",
             "description": "Requested CPU frequency range <p1>[-p2][:p3]"
           },
           "cpus_per_tres": {
             "type": "string",
             "description": "Semicolon delimited list of TRES=# values values indicating how many CPUs should be allocated for each specified TRES (currently only used for gres\/gpu)"
           },
           "crontab": {
             "$ref": "#\/components\/schemas\/v0.0.40_cron_entry",
             "description": "crontab entry"
           },
           "deadline": {
             "type": "integer",
             "format": "int64",
             "description": "Latest time that the job may start (UNIX timestamp)"
           },
           "delay_boot": {
             "type": "integer",
             "format": "int32",
             "description": "Number of seconds after job eligible start that nodes will be rebooted to satisfy feature specification"
           },
           "dependency": {
             "type": "string",
             "description": "Other jobs that must meet certain criteria before this job can start"
           },
           "end_time": {
             "type": "integer",
             "format": "int64",
             "description": "Expected end time (UNIX timestamp)"
           },
           "environment": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_array",
             "description": "Environment variables to be set for the job"
           },
           "rlimits": {
             "type": "object",
             "properties": {
               "cpu": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Per-process CPU limit, in seconds."
               },
               "fsize": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Largest file that can be created, in bytes."
               },
               "data": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Maximum size of data segment, in bytes. "
               },
               "stack": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Maximum size of stack segment, in bytes."
               },
               "core": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Largest core file that can be created, in bytes."
               },
               "rss": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Largest resident set size, in bytes. This affects swapping; processes that are exceeding their resident set size will be more likely to have physical memory taken from them."
               },
               "nproc": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Number of processes."
               },
               "nofile": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Number of open files."
               },
               "memlock": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Locked-in-memory address space"
               },
               "as": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Address space limit."
               }
             }
           },
           "excluded_nodes": {
             "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
             "description": "Comma separated list of nodes that may not be used"
           },
           "extra": {
             "type": "string",
             "description": "Arbitrary string used for node filtering if extra constraints are enabled"
           },
           "constraints": {
             "type": "string",
             "description": "Comma separated list of features that are required"
           },
           "group_id": {
             "type": "string",
             "description": "Group ID of the user that owns the job"
           },
           "hetjob_group": {
             "type": "integer",
             "format": "int32",
             "description": "Unique sequence number applied to this component of the heterogeneous job"
           },
           "immediate": {
             "type": "boolean",
             "description": "If true, exit if resources are not available within the time period specified"
           },
           "job_id": {
             "type": "integer",
             "format": "int32",
             "description": "Job ID"
           },
           "kill_on_node_fail": {
             "type": "boolean",
             "description": "If true, kill job on node failure"
           },
           "licenses": {
             "type": "string",
             "description": "License(s) required by the job"
           },
           "mail_type": {
             "type": "array",
             "description": "Mail event type(s)",
             "items": {
               "enum": [
                 "BEGIN",
                 "END",
                 "FAIL",
                 "REQUEUE",
                 "TIME=100%",
                 "TIME=90%",
                 "TIME=80%",
                 "TIME=50%",
                 "STAGE_OUT",
                 "ARRAY_TASKS",
                 "INVALID_DEPENDENCY"
               ],
               "type": "string"
             }
           },
           "mail_user": {
             "type": "string",
             "description": "User to receive email notifications"
           },
           "mcs_label": {
             "type": "string",
             "description": "Multi-Category Security label on the job"
           },
           "memory_binding": {
             "type": "string",
             "description": "Binding map for map\/mask_cpu"
           },
           "memory_binding_type": {
             "type": "array",
             "description": "Method for binding tasks to memory",
             "items": {
               "enum": [
                 "NONE",
                 "RANK",
                 "MAP",
                 "MASK",
                 "LOCAL",
                 "VERBOSE",
                 "SORT",
                 "PREFER"
               ],
               "type": "string"
             }
           },
           "memory_per_tres": {
             "type": "string",
             "description": "Semicolon delimited list of TRES=# values indicating how much memory in megabytes should be allocated for each specified TRES (currently only used for gres\/gpu)"
           },
           "name": {
             "type": "string",
             "description": "Job name"
           },
           "network": {
             "type": "string",
             "description": "Network specs for job step"
           },
           "nice": {
             "type": "integer",
             "format": "int32",
             "description": "Requested job priority change"
           },
           "tasks": {
             "type": "integer",
             "format": "int32",
             "description": "Number of tasks"
           },
           "open_mode": {
             "type": "array",
             "description": "Open mode used for stdout and stderr files",
             "items": {
               "enum": [
                 "APPEND",
                 "TRUNCATE"
               ],
               "type": "string"
             }
           },
           "reserve_ports": {
             "type": "integer",
             "format": "int32",
             "description": "Port to send various notification msg to"
           },
           "overcommit": {
             "type": "boolean",
             "description": "Overcommit resources"
           },
           "partition": {
             "type": "string",
             "description": "Partition assigned to the job"
           },
           "distribution_plane_size": {
             "type": "integer",
             "format": "int32",
             "description": "Plane size specification when distribution specifies plane"
           },
           "power_flags": {
             "$ref": "#\/components\/schemas\/v0.0.40_power_flags"
           },
           "prefer": {
             "type": "string",
             "description": "Comma separated list of features that are preferred but not required"
           },
           "hold": {
             "type": "boolean",
             "description": "Job held"
           },
           "priority": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Request specific job priority"
           },
           "profile": {
             "type": "array",
             "description": "Profile used by the acct_gather_profile plugin",
             "items": {
               "enum": [
                 "NOT_SET",
                 "NONE",
                 "ENERGY",
                 "LUSTRE",
                 "NETWORK",
                 "TASK"
               ],
               "type": "string"
             }
           },
           "qos": {
             "type": "string",
             "description": "Quality of Service assigned to the job"
           },
           "reboot": {
             "type": "boolean",
             "description": "Node reboot requested before start"
           },
           "required_nodes": {
             "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
             "description": "Comma separated list of required nodes"
           },
           "requeue": {
             "type": "boolean",
             "description": "Determines whether the job may be requeued"
           },
           "reservation": {
             "type": "string",
             "description": "Name of reservation to use"
           },
           "script": {
             "type": "string",
             "description": "Job batch script; only the first component in a HetJob is populated or honored"
           },
           "shared": {
             "type": "array",
             "description": "How the job can share resources with other jobs, if at all",
             "items": {
               "enum": [
                 "none",
                 "oversubscribe",
                 "user",
                 "mcs"
               ],
               "type": "string"
             }
           },
           "exclusive": {
             "type": "array",
             "items": {
               "enum": [
                 "true",
                 "false",
                 "user",
                 "mcs"
               ],
               "type": "string"
             }
           },
           "oversubscribe": {
             "type": "boolean"
           },
           "site_factor": {
             "type": "integer",
             "format": "int32",
             "description": "Site-specific priority factor"
           },
           "spank_environment": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_array",
             "description": "Environment variables for job prolog\/epilog scripts as set by SPANK plugins"
           },
           "distribution": {
             "type": "string",
             "description": "Layout"
           },
           "time_limit": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum run time in minutes"
           },
           "time_minimum": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Minimum run time in minutes"
           },
           "tres_bind": {
             "type": "string",
             "description": "Task to TRES binding directives"
           },
           "tres_freq": {
             "type": "string",
             "description": "TRES frequency directives"
           },
           "tres_per_job": {
             "type": "string",
             "description": "Comma separated list of TRES=# values to be allocated for every job"
           },
           "tres_per_node": {
             "type": "string",
             "description": "Comma separated list of TRES=# values to be allocated for every node"
           },
           "tres_per_socket": {
             "type": "string",
             "description": "Comma separated list of TRES=# values to be allocated for every socket"
           },
           "tres_per_task": {
             "type": "string",
             "description": "Comma separated list of TRES=# values to be allocated for every task"
           },
           "user_id": {
             "type": "string",
             "description": "User ID that owns the job"
           },
           "wait_all_nodes": {
             "type": "boolean",
             "description": "If true, wait to start until after all nodes have booted"
           },
           "kill_warning_flags": {
             "type": "array",
             "description": "Flags related to job signals",
             "items": {
               "enum": [
                 "BATCH_JOB",
                 "ARRAY_TASK",
                 "FULL_STEPS_ONLY",
                 "FULL_JOB",
                 "FEDERATION_REQUEUE",
                 "HURRY",
                 "OUT_OF_MEMORY",
                 "NO_SIBLING_JOBS",
                 "RESERVATION_JOB",
                 "NO_CRON_JOBS",
                 "VERBOSE",
                 "CRON_JOBS",
                 "WARNING_SENT"
               ],
               "type": "string"
             }
           },
           "kill_warning_signal": {
             "type": "string",
             "description": "Signal to send when approaching end time (e.g. \"10\" or \"USR1\")"
           },
           "kill_warning_delay": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Number of seconds before end time to send the warning signal"
           },
           "current_working_directory": {
             "type": "string",
             "description": "Working directory to use for the job"
           },
           "cpus_per_task": {
             "type": "integer",
             "format": "int32",
             "description": "Number of CPUs required by each task"
           },
           "minimum_cpus": {
             "type": "integer",
             "format": "int32",
             "description": "Minimum number of CPUs required"
           },
           "maximum_cpus": {
             "type": "integer",
             "format": "int32",
             "description": "Maximum number of CPUs required"
           },
           "nodes": {
             "type": "string",
             "description": "Node count range specification (e.g. 1-15:4)"
           },
           "minimum_nodes": {
             "type": "integer",
             "format": "int32",
             "description": "Minimum node count"
           },
           "maximum_nodes": {
             "type": "integer",
             "format": "int32",
             "description": "Maximum node count"
           },
           "minimum_boards_per_node": {
             "type": "integer",
             "format": "int32",
             "description": "Boards per node required"
           },
           "minimum_sockets_per_board": {
             "type": "integer",
             "format": "int32",
             "description": "Sockets per board required"
           },
           "sockets_per_node": {
             "type": "integer",
             "format": "int32",
             "description": "Sockets per node required"
           },
           "threads_per_core": {
             "type": "integer",
             "format": "int32",
             "description": "Threads per core required"
           },
           "tasks_per_node": {
             "type": "integer",
             "format": "int32",
             "description": "Number of tasks to invoke on each node"
           },
           "tasks_per_socket": {
             "type": "integer",
             "format": "int32",
             "description": "Number of tasks to invoke on each socket"
           },
           "tasks_per_core": {
             "type": "integer",
             "format": "int32",
             "description": "Number of tasks to invoke on each core"
           },
           "tasks_per_board": {
             "type": "integer",
             "format": "int32",
             "description": "Number of tasks to invoke on each board"
           },
           "ntasks_per_tres": {
             "type": "integer",
             "format": "int32",
             "description": "Number of tasks that can access each GPU"
           },
           "minimum_cpus_per_node": {
             "type": "integer",
             "format": "int32",
             "description": "Minimum number of CPUs per node"
           },
           "memory_per_cpu": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Minimum memory in megabytes per allocated CPU"
           },
           "memory_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Minimum memory in megabytes per allocated node"
           },
           "temporary_disk_per_node": {
             "type": "integer",
             "format": "int32",
             "description": "Minimum tmp disk space required per node"
           },
           "selinux_context": {
             "type": "string",
             "description": "SELinux context"
           },
           "required_switches": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of switches"
           },
           "standard_error": {
             "type": "string",
             "description": "Path to stderr file"
           },
           "standard_input": {
             "type": "string",
             "description": "Path to stdin file"
           },
           "standard_output": {
             "type": "string",
             "description": "Path to stdout file"
           },
           "wait_for_switch": {
             "type": "integer",
             "format": "int32",
             "description": "Maximum time to wait for switches in seconds"
           },
           "wckey": {
             "type": "string",
             "description": "Workload characterization key"
           },
           "x11": {
             "type": "array",
             "description": "X11 forwarding options",
             "items": {
               "enum": [
                 "FORWARD_ALL_NODES",
                 "BATCH_NODE",
                 "FIRST_NODE",
                 "LAST_NODE"
               ],
               "type": "string"
             }
           },
           "x11_magic_cookie": {
             "type": "string",
             "description": "Magic cookie for X11 forwarding"
           },
           "x11_target_host": {
             "type": "string",
             "description": "Hostname or UNIX socket if x11_target_port=0"
           },
           "x11_target_port": {
             "type": "integer",
             "format": "int32",
             "description": "TCP port"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_cron_entry": {
         "type": "object",
         "properties": {
           "flags": {
             "type": "array",
             "description": "Flags",
             "items": {
               "enum": [
                 "WILD_MINUTE",
                 "WILD_HOUR",
                 "WILD_DAY_OF_MONTH",
                 "WILD_MONTH",
                 "WILD_DAY_OF_WEEK"
               ],
               "type": "string"
             }
           },
           "minute": {
             "type": "string",
             "description": "Ranged string specifying eligible minute values (e.g. 0-10,50)"
           },
           "hour": {
             "type": "string",
             "description": "Ranged string specifying eligible hour values (e.g. 0-5,23)"
           },
           "day_of_month": {
             "type": "string",
             "description": "Ranged string specifying eligible day of month values (e.g. 0-10,29)"
           },
           "month": {
             "type": "string",
             "description": "Ranged string specifying eligible month values (e.g. 0-5,12)"
           },
           "day_of_week": {
             "type": "string",
             "description": "Ranged string specifying eligible day of week values (e.g.0-3,7)"
           },
           "specification": {
             "type": "string",
             "description": "Time specification (* means valid for all allowed values) - minute hour day_of_month month day_of_week"
           },
           "command": {
             "type": "string",
             "description": "Command to run"
           },
           "line": {
             "type": "object",
             "properties": {
               "start": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Start of this entry in file"
               },
               "end": {
                 "type": "integer",
                 "format": "int32",
                 "description": "End of this entry in file"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.40_csv_string": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.40_power_flags": {
         "type": "array",
         "description": "removed field",
         "items": {
         },
         "deprecated": true
       },
       "v0.0.40_uint16_no_val": {
         "type": "object",
         "description": "Integer number with flags",
         "properties": {
           "set": {
             "type": "boolean",
             "description": "True if number has been set. False if number is unset",
             "default": false
           },
           "infinite": {
             "type": "boolean",
             "description": "True if number has been set to infinite. \"set\" and \"number\" will be ignored.",
             "default": 0
           },
           "number": {
             "type": "integer",
             "format": "int64",
             "description": "If set is True the number will be set with value. Otherwise ignore number contents."
           }
         }
       },
       "v0.0.40_openapi_job_info_resp": {
         "type": "object",
         "properties": {
           "jobs": {
             "$ref": "#\/components\/schemas\/v0.0.40_job_info_msg",
             "description": "List of jobs"
           },
           "last_backfill": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time of last backfill scheduler run (UNIX timestamp)"
           },
           "last_update": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time of last job change (UNIX timestamp)"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "jobs",
           "last_backfill",
           "last_update"
         ]
       },
       "v0.0.40_job_info_msg": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_job_info"
         }
       },
       "v0.0.40_job_info": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string",
             "description": "Account associated with the job"
           },
           "accrue_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "When the job started accruing age priority (UNIX timestamp)"
           },
           "admin_comment": {
             "type": "string",
             "description": "Arbitrary comment made by administrator"
           },
           "allocating_node": {
             "type": "string",
             "description": "Local node making the resource allocation"
           },
           "array_job_id": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Job ID of job array, or 0 if N\/A"
           },
           "array_task_id": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Task ID of this task in job array"
           },
           "array_max_tasks": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of simultaneously running tasks, 0 if no limit"
           },
           "array_task_string": {
             "type": "string",
             "description": "String expression of task IDs in this record"
           },
           "association_id": {
             "type": "integer",
             "format": "int32",
             "description": "Unique identifier for the association"
           },
           "batch_features": {
             "type": "string",
             "description": "Features required for batch script's node"
           },
           "batch_flag": {
             "type": "boolean",
             "description": "True if batch job"
           },
           "batch_host": {
             "type": "string",
             "description": "Name of host running batch script"
           },
           "flags": {
             "type": "array",
             "description": "Job flags",
             "items": {
               "enum": [
                 "KILL_INVALID_DEPENDENCY",
                 "NO_KILL_INVALID_DEPENDENCY",
                 "HAS_STATE_DIRECTORY",
                 "TESTING_BACKFILL",
                 "GRES_BINDING_ENFORCED",
                 "TEST_NOW_ONLY",
                 "SEND_JOB_ENVIRONMENT",
                 "SPREAD_JOB",
                 "PREFER_MINIMUM_NODE_COUNT",
                 "JOB_KILL_HURRY",
                 "SKIP_TRES_STRING_ACCOUNTING",
                 "SIBLING_CLUSTER_UPDATE_ONLY",
                 "HETEROGENEOUS_JOB",
                 "EXACT_TASK_COUNT_REQUESTED",
                 "EXACT_CPU_COUNT_REQUESTED",
                 "TESTING_WHOLE_NODE_BACKFILL",
                 "TOP_PRIORITY_JOB",
                 "ACCRUE_COUNT_CLEARED",
                 "GRES_BINDING_DISABLED",
                 "JOB_WAS_RUNNING",
                 "JOB_ACCRUE_TIME_RESET",
                 "CRON_JOB",
                 "EXACT_MEMORY_REQUESTED",
                 "USING_DEFAULT_ACCOUNT",
                 "USING_DEFAULT_PARTITION",
                 "USING_DEFAULT_QOS",
                 "USING_DEFAULT_WCKEY",
                 "DEPENDENT",
                 "MAGNETIC",
                 "PARTITION_ASSIGNED",
                 "BACKFILL_ATTEMPTED",
                 "SCHEDULING_ATTEMPTED",
                 "SAVE_BATCH_SCRIPT",
                 "GRES_ONE_TASK_PER_SHARING",
                 "GRES_MULTIPLE_TASKS_PER_SHARING",
                 "GRES_ALLOW_TASK_SHARING"
               ],
               "type": "string"
             }
           },
           "burst_buffer": {
             "type": "string",
             "description": "Burst buffer specifications"
           },
           "burst_buffer_state": {
             "type": "string",
             "description": "Burst buffer state details"
           },
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "cluster_features": {
             "type": "string",
             "description": "List of required cluster features"
           },
           "command": {
             "type": "string",
             "description": "Executed command"
           },
           "comment": {
             "type": "string",
             "description": "Arbitrary comment"
           },
           "container": {
             "type": "string",
             "description": "Absolute path to OCI container bundle"
           },
           "container_id": {
             "type": "string",
             "description": "OCI container ID"
           },
           "contiguous": {
             "type": "boolean",
             "description": "True if job requires contiguous nodes"
           },
           "core_spec": {
             "type": "integer",
             "format": "int32",
             "description": "Specialized core count"
           },
           "thread_spec": {
             "type": "integer",
             "format": "int32",
             "description": "Specialized thread count"
           },
           "cores_per_socket": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Cores per socket required"
           },
           "billable_tres": {
             "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val",
             "description": "Billable TRES"
           },
           "cpus_per_task": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Number of CPUs required by each task"
           },
           "cpu_frequency_minimum": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Minimum CPU frequency"
           },
           "cpu_frequency_maximum": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum CPU frequency"
           },
           "cpu_frequency_governor": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "CPU frequency governor"
           },
           "cpus_per_tres": {
             "type": "string",
             "description": "Semicolon delimited list of TRES=# values indicating how many CPUs should be allocated for each specified TRES (currently only used for gres\/gpu)"
           },
           "cron": {
             "type": "string",
             "description": "Time specification for scrontab job"
           },
           "deadline": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Latest time that the job may start (UNIX timestamp)"
           },
           "delay_boot": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Number of seconds after job eligible start that nodes will be rebooted to satisfy feature specification"
           },
           "dependency": {
             "type": "string",
             "description": "Other jobs that must meet certain criteria before this job can start"
           },
           "derived_exit_code": {
             "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
             "description": "return code returned by process"
           },
           "eligible_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time when the job became eligible to run (UNIX timestamp)"
           },
           "end_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "End time, real or expected (UNIX timestamp)"
           },
           "excluded_nodes": {
             "type": "string",
             "description": "Comma separated list of nodes that may not be used"
           },
           "exit_code": {
             "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
             "description": "return code returned by process"
           },
           "extra": {
             "type": "string",
             "description": "Arbitrary string used for node filtering if extra constraints are enabled"
           },
           "failed_node": {
             "type": "string",
             "description": "Name of node that caused job failure"
           },
           "features": {
             "type": "string",
             "description": "Comma separated list of features that are required"
           },
           "federation_origin": {
             "type": "string",
             "description": "Origin cluster's name (when using federation)"
           },
           "federation_siblings_active": {
             "type": "string",
             "description": "Active sibling job names"
           },
           "federation_siblings_viable": {
             "type": "string",
             "description": "Viable sibling job names"
           },
           "gres_detail": {
             "$ref": "#\/components\/schemas\/v0.0.40_job_info_gres_detail",
             "description": "List of GRES index and counts allocated per node"
           },
           "group_id": {
             "type": "integer",
             "format": "int32",
             "description": "Group ID of the user that owns the job"
           },
           "group_name": {
             "type": "string",
             "description": "Group name of the user that owns the job"
           },
           "het_job_id": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Heterogeneous job ID, if applicable"
           },
           "het_job_id_set": {
             "type": "string",
             "description": "Job ID range for all heterogeneous job components"
           },
           "het_job_offset": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Unique sequence number applied to this component of the heterogeneous job"
           },
           "job_id": {
             "type": "integer",
             "format": "int32",
             "description": "Job ID"
           },
           "job_resources": {
             "$ref": "#\/components\/schemas\/v0.0.40_job_res",
             "description": "Resources used by the job"
           },
           "job_size_str": {
             "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
             "description": "Number of nodes (in a range) required for this job"
           },
           "job_state": {
             "type": "array",
             "description": "Current state",
             "items": {
               "enum": [
                 "PENDING",
                 "RUNNING",
                 "SUSPENDED",
                 "COMPLETED",
                 "CANCELLED",
                 "FAILED",
                 "TIMEOUT",
                 "NODE_FAIL",
                 "PREEMPTED",
                 "BOOT_FAIL",
                 "DEADLINE",
                 "OUT_OF_MEMORY",
                 "LAUNCH_FAILED",
                 "UPDATE_DB",
                 "REQUEUED",
                 "REQUEUE_HOLD",
                 "SPECIAL_EXIT",
                 "RESIZING",
                 "CONFIGURING",
                 "COMPLETING",
                 "STOPPED",
                 "RECONFIG_FAIL",
                 "POWER_UP_NODE",
                 "REVOKED",
                 "REQUEUE_FED",
                 "RESV_DEL_HOLD",
                 "SIGNALING",
                 "STAGE_OUT"
               ],
               "type": "string"
             }
           },
           "last_sched_evaluation": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Last time job was evaluated for scheduling (UNIX timestamp)"
           },
           "licenses": {
             "type": "string",
             "description": "License(s) required by the job"
           },
           "mail_type": {
             "type": "array",
             "description": "Mail event type(s)",
             "items": {
               "enum": [
                 "BEGIN",
                 "END",
                 "FAIL",
                 "REQUEUE",
                 "TIME=100%",
                 "TIME=90%",
                 "TIME=80%",
                 "TIME=50%",
                 "STAGE_OUT",
                 "ARRAY_TASKS",
                 "INVALID_DEPENDENCY"
               ],
               "type": "string"
             }
           },
           "mail_user": {
             "type": "string",
             "description": "User to receive email notifications"
           },
           "max_cpus": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of CPUs usable by the job"
           },
           "max_nodes": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of nodes usable by the job"
           },
           "mcs_label": {
             "type": "string",
             "description": "Multi-Category Security label on the job"
           },
           "memory_per_tres": {
             "type": "string",
             "description": "Semicolon delimited list of TRES=# values indicating how much memory in megabytes should be allocated for each specified TRES (currently only used for gres\/gpu)"
           },
           "name": {
             "type": "string",
             "description": "Job name"
           },
           "network": {
             "type": "string",
             "description": "Network specs for the job"
           },
           "nodes": {
             "type": "string",
             "description": "Node(s) allocated to the job"
           },
           "nice": {
             "type": "integer",
             "format": "int32",
             "description": "Requested job priority change"
           },
           "tasks_per_core": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Number of tasks invoked on each core"
           },
           "tasks_per_tres": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Number of tasks that can assess each GPU"
           },
           "tasks_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Number of tasks invoked on each node"
           },
           "tasks_per_socket": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Number of tasks invoked on each socket"
           },
           "tasks_per_board": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Number of tasks invoked on each board"
           },
           "cpus": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Minimum number of CPUs required"
           },
           "node_count": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Minimum number of nodes required"
           },
           "tasks": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Number of tasks"
           },
           "partition": {
             "type": "string",
             "description": "Partition assigned to the job"
           },
           "prefer": {
             "type": "string",
             "description": "Feature(s) the job requested but that are not required"
           },
           "memory_per_cpu": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Minimum memory in megabytes per allocated CPU"
           },
           "memory_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Minimum memory in megabytes per allocated node"
           },
           "minimum_cpus_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Minimum number of CPUs per node"
           },
           "minimum_tmp_disk_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Minimum tmp disk space required per node"
           },
           "power": {
             "type": "object",
             "properties": {
               "flags": {
                 "$ref": "#\/components\/schemas\/v0.0.40_power_flags"
               }
             }
           },
           "preempt_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time job received preemption signal (UNIX timestamp)"
           },
           "preemptable_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time job becomes eligible for preemption (UNIX timestamp)"
           },
           "pre_sus_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Total run time prior to last suspend in seconds"
           },
           "hold": {
             "type": "boolean",
             "description": "Job held"
           },
           "priority": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Request specific job priority"
           },
           "profile": {
             "type": "array",
             "description": "Profile used by the acct_gather_profile plugin",
             "items": {
               "enum": [
                 "NOT_SET",
                 "NONE",
                 "ENERGY",
                 "LUSTRE",
                 "NETWORK",
                 "TASK"
               ],
               "type": "string"
             }
           },
           "qos": {
             "type": "string",
             "description": "Quality of Service assigned to the job"
           },
           "reboot": {
             "type": "boolean",
             "description": "Node reboot requested before start"
           },
           "required_nodes": {
             "type": "string",
             "description": "Comma separated list of required nodes"
           },
           "minimum_switches": {
             "type": "integer",
             "format": "int32",
             "description": "Maximum number of switches (the 'minimum' in the key is incorrect)"
           },
           "requeue": {
             "type": "boolean",
             "description": "Determines whether the job may be requeued"
           },
           "resize_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time of last size change (UNIX timestamp)"
           },
           "restart_cnt": {
             "type": "integer",
             "format": "int32",
             "description": "Number of job restarts"
           },
           "resv_name": {
             "type": "string",
             "description": "Name of reservation to use"
           },
           "scheduled_nodes": {
             "type": "string",
             "description": "List of nodes scheduled to be used for the job"
           },
           "selinux_context": {
             "type": "string",
             "description": "SELinux context"
           },
           "shared": {
             "type": "array",
             "description": "How the job can share resources with other jobs, if at all",
             "items": {
               "enum": [
                 "none",
                 "oversubscribe",
                 "user",
                 "mcs"
               ],
               "type": "string"
             }
           },
           "exclusive": {
             "type": "array",
             "items": {
               "enum": [
                 "true",
                 "false",
                 "user",
                 "mcs"
               ],
               "type": "string"
             }
           },
           "oversubscribe": {
             "type": "boolean"
           },
           "show_flags": {
             "type": "array",
             "description": "Job details shown in this response",
             "items": {
               "enum": [
                 "ALL",
                 "DETAIL",
                 "MIXED",
                 "LOCAL",
                 "SIBLING",
                 "FEDERATION",
                 "FUTURE"
               ],
               "type": "string"
             }
           },
           "sockets_per_board": {
             "type": "integer",
             "format": "int32",
             "description": "Number of sockets per board required"
           },
           "sockets_per_node": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Number of sockets per node required"
           },
           "start_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time execution began, or is expected to begin (UNIX timestamp)"
           },
           "state_description": {
             "type": "string",
             "description": "Optional details for state_reason"
           },
           "state_reason": {
             "type": "string",
             "description": "Reason for current Pending or Failed state"
           },
           "standard_error": {
             "type": "string",
             "description": "Path to stderr file"
           },
           "standard_input": {
             "type": "string",
             "description": "Path to stdin file"
           },
           "standard_output": {
             "type": "string",
             "description": "Path to stdout file"
           },
           "submit_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time when the job was submitted (UNIX timestamp)"
           },
           "suspend_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time the job was last suspended or resumed (UNIX timestamp)"
           },
           "system_comment": {
             "type": "string",
             "description": "Arbitrary comment from slurmctld"
           },
           "time_limit": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum run time in minutes"
           },
           "time_minimum": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Minimum run time in minutes"
           },
           "threads_per_core": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
             "description": "Number of threads per core required"
           },
           "tres_bind": {
             "type": "string",
             "description": "Task to TRES binding directives"
           },
           "tres_freq": {
             "type": "string",
             "description": "TRES frequency directives"
           },
           "tres_per_job": {
             "type": "string",
             "description": "Comma separated list of TRES=# values to be allocated per job"
           },
           "tres_per_node": {
             "type": "string",
             "description": "Comma separated list of TRES=# values to be allocated per node"
           },
           "tres_per_socket": {
             "type": "string",
             "description": "Comma separated list of TRES=# values to be allocated per socket"
           },
           "tres_per_task": {
             "type": "string",
             "description": "Comma separated list of TRES=# values to be allocated per task"
           },
           "tres_req_str": {
             "type": "string",
             "description": "TRES requested by the job"
           },
           "tres_alloc_str": {
             "type": "string",
             "description": "TRES used by the job"
           },
           "user_id": {
             "type": "integer",
             "format": "int32",
             "description": "User ID that owns the job"
           },
           "user_name": {
             "type": "string",
             "description": "User name that owns the job"
           },
           "maximum_switch_wait_time": {
             "type": "integer",
             "format": "int32",
             "description": "Maximum time to wait for switches in seconds"
           },
           "wckey": {
             "type": "string",
             "description": "Workload characterization key"
           },
           "current_working_directory": {
             "type": "string",
             "description": "Working directory to use for the job"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_process_exit_code_verbose": {
         "type": "object",
         "properties": {
           "status": {
             "type": "array",
             "description": "Status given by return code",
             "items": {
               "enum": [
                 "INVALID",
                 "PENDING",
                 "SUCCESS",
                 "ERROR",
                 "SIGNALED",
                 "CORE_DUMPED"
               ],
               "type": "string"
             }
           },
           "return_code": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Process return code (numeric)"
           },
           "signal": {
             "type": "object",
             "properties": {
               "id": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
                 "description": "Signal sent to process (numeric)"
               },
               "name": {
                 "type": "string",
                 "description": "Signal sent to process"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.40_job_info_gres_detail": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.40_job_res": {
         "type": "object",
         "properties": {
           "nodes": {
             "type": "string",
             "description": "Node(s) allocated to the job"
           },
           "allocated_cores": {
             "type": "integer",
             "format": "int32",
             "description": "Number of allocated cores"
           },
           "allocated_cpus": {
             "type": "integer",
             "format": "int32",
             "description": "Number of allocated CPUs"
           },
           "allocated_hosts": {
             "type": "integer",
             "format": "int32",
             "description": "Number of allocated hosts"
           },
           "allocated_nodes": {
             "$ref": "#\/components\/schemas\/v0.0.40_job_res_nodes",
             "description": "Allocated node resources"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_job_res_nodes": {
         "type": "array",
         "description": "job node resources",
         "items": {
         }
       },
       "v0.0.40_openapi_kill_jobs_resp": {
         "type": "object",
         "properties": {
           "status": {
             "$ref": "#\/components\/schemas\/v0.0.40_kill_jobs_resp_msg",
             "description": "resultant status of signal request"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "status"
         ]
       },
       "v0.0.40_kill_jobs_resp_msg": {
         "type": "array",
         "description": "List of jobs signal responses",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_kill_jobs_resp_job",
           "description": "List of jobs signal responses"
         }
       },
       "v0.0.40_kill_jobs_resp_job": {
         "type": "object",
         "properties": {
           "error": {
             "type": "object",
             "properties": {
               "string": {
                 "type": "string",
                 "description": "String error encountered signaling job"
               },
               "code": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Numeric error encountered signaling job"
               },
               "message": {
                 "type": "string",
                 "description": "Error message why signaling job failed"
               }
             }
           },
           "step_id": {
             "type": "string",
             "description": "Job or Step ID that signaling failed"
           },
           "job_id": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Job ID that signaling failed"
           },
           "federation": {
             "type": "object",
             "properties": {
               "sibling": {
                 "type": "string",
                 "description": "Name of federation sibling (may be empty for non-federation)"
               }
             }
           }
         },
         "required": [
           "error\/string",
           "error\/code",
           "error\/message",
           "step_id",
           "job_id",
           "federation\/sibling"
         ]
       },
       "v0.0.40_kill_jobs_msg": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string",
             "description": "Filter jobs to a specific account"
           },
           "flags": {
             "type": "array",
             "description": "Filter jobs according to flags",
             "items": {
               "enum": [
                 "BATCH_JOB",
                 "ARRAY_TASK",
                 "FULL_STEPS_ONLY",
                 "FULL_JOB",
                 "FEDERATION_REQUEUE",
                 "HURRY",
                 "OUT_OF_MEMORY",
                 "NO_SIBLING_JOBS",
                 "RESERVATION_JOB",
                 "NO_CRON_JOBS",
                 "VERBOSE",
                 "CRON_JOBS",
                 "WARNING_SENT"
               ],
               "type": "string"
             }
           },
           "job_name": {
             "type": "string",
             "description": "Filter jobs to a specific name"
           },
           "jobs": {
             "$ref": "#\/components\/schemas\/v0.0.40_kill_jobs_msg_jobs_array",
             "description": "List of jobs to signal"
           },
           "partition": {
             "type": "string",
             "description": "Filter jobs to a specific partition"
           },
           "qos": {
             "type": "string",
             "description": "Filter jobs to a specific QOS"
           },
           "reservation": {
             "type": "string",
             "description": "Filter jobs to a specific reservation"
           },
           "signal": {
             "type": "string",
             "description": "Signal to send to jobs"
           },
           "job_state": {
             "type": "array",
             "description": "Filter jobs to a specific state",
             "items": {
               "enum": [
                 "PENDING",
                 "RUNNING",
                 "SUSPENDED",
                 "COMPLETED",
                 "CANCELLED",
                 "FAILED",
                 "TIMEOUT",
                 "NODE_FAIL",
                 "PREEMPTED",
                 "BOOT_FAIL",
                 "DEADLINE",
                 "OUT_OF_MEMORY",
                 "LAUNCH_FAILED",
                 "UPDATE_DB",
                 "REQUEUED",
                 "REQUEUE_HOLD",
                 "SPECIAL_EXIT",
                 "RESIZING",
                 "CONFIGURING",
                 "COMPLETING",
                 "STOPPED",
                 "RECONFIG_FAIL",
                 "POWER_UP_NODE",
                 "REVOKED",
                 "REQUEUE_FED",
                 "RESV_DEL_HOLD",
                 "SIGNALING",
                 "STAGE_OUT"
               ],
               "type": "string"
             }
           },
           "user_id": {
             "type": "string",
             "description": "Filter jobs to a specific numeric user id"
           },
           "user_name": {
             "type": "string",
             "description": "Filter jobs to a specific user name"
           },
           "wckey": {
             "type": "string",
             "description": "Filter jobs to a specific wckey"
           },
           "nodes": {
             "$ref": "#\/components\/schemas\/v0.0.40_hostlist_string",
             "description": "Filter jobs to a set of nodes"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_kill_jobs_msg_jobs_array": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.40_hostlist_string": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.40_openapi_job_post_response": {
         "type": "object",
         "properties": {
           "results": {
             "$ref": "#\/components\/schemas\/v0.0.40_job_array_response_array",
             "description": "Job update results"
           },
           "job_id": {
             "type": "string",
             "description": "First updated Job ID - Use results instead"
           },
           "step_id": {
             "type": "string",
             "description": "First updated Step ID - Use results instead"
           },
           "job_submit_user_msg": {
             "type": "string",
             "description": "First updated Job submision user message - Use results instead"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_job_array_response_array": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_job_array_response_msg_entry"
         }
       },
       "v0.0.40_job_array_response_msg_entry": {
         "type": "object",
         "properties": {
           "job_id": {
             "type": "integer",
             "format": "int32",
             "description": "Job ID for updated Job"
           },
           "step_id": {
             "type": "string",
             "description": "Step ID for updated Job"
           },
           "error": {
             "type": "string",
             "description": "Verbose update status or error"
           },
           "error_code": {
             "type": "integer",
             "format": "int32",
             "description": "Verbose update status or error"
           },
           "why": {
             "type": "string",
             "description": "Update response message"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_nodes_resp": {
         "type": "object",
         "properties": {
           "nodes": {
             "$ref": "#\/components\/schemas\/v0.0.40_nodes",
             "description": "List of nodes"
           },
           "last_update": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time of last node change (UNIX timestamp)"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "nodes",
           "last_update"
         ]
       },
       "v0.0.40_nodes": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_node"
         }
       },
       "v0.0.40_node": {
         "type": "object",
         "properties": {
           "architecture": {
             "type": "string",
             "description": "Computer architecture"
           },
           "burstbuffer_network_address": {
             "type": "string",
             "description": "Alternate network path to be used for sbcast network traffic"
           },
           "boards": {
             "type": "integer",
             "format": "int32",
             "description": "Number of Baseboards in nodes with a baseboard controller"
           },
           "boot_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time when the node booted (UNIX timestamp)"
           },
           "cluster_name": {
             "type": "string",
             "description": "Cluster name (only set in federated environments)"
           },
           "cores": {
             "type": "integer",
             "format": "int32",
             "description": "Number of cores in a single physical processor socket"
           },
           "specialized_cores": {
             "type": "integer",
             "format": "int32",
             "description": "Number of cores reserved for system use"
           },
           "cpu_binding": {
             "type": "integer",
             "format": "int32",
             "description": "Default method for binding tasks to allocated CPUs"
           },
           "cpu_load": {
             "type": "integer",
             "format": "int32",
             "description": "CPU load as reported by the OS"
           },
           "free_mem": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Total memory in MB currently free as reported by the OS"
           },
           "cpus": {
             "type": "integer",
             "format": "int32",
             "description": "Total CPUs, including cores and threads"
           },
           "effective_cpus": {
             "type": "integer",
             "format": "int32",
             "description": "Number of effective CPUs (excluding specialized CPUs)"
           },
           "specialized_cpus": {
             "type": "string",
             "description": "Abstract CPU IDs on this node reserved for exclusive use by slurmd and slurmstepd"
           },
           "energy": {
             "$ref": "#\/components\/schemas\/v0.0.40_acct_gather_energy",
             "description": "Energy usage data"
           },
           "external_sensors": {
             "$ref": "#\/components\/schemas\/v0.0.40_ext_sensors_data"
           },
           "extra": {
             "type": "string",
             "description": "Arbitrary string used for node filtering if extra constraints are enabled"
           },
           "power": {
             "$ref": "#\/components\/schemas\/v0.0.40_power_mgmt_data"
           },
           "features": {
             "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
             "description": "Available features"
           },
           "active_features": {
             "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
             "description": "Currently active features"
           },
           "gres": {
             "type": "string",
             "description": "Generic resources"
           },
           "gres_drained": {
             "type": "string",
             "description": "Drained generic resources"
           },
           "gres_used": {
             "type": "string",
             "description": "Generic resources currently in use"
           },
           "instance_id": {
             "type": "string",
             "description": "Cloud instance ID"
           },
           "instance_type": {
             "type": "string",
             "description": "Cloud instance type"
           },
           "last_busy": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time when the node was last busy (UNIX timestamp)"
           },
           "mcs_label": {
             "type": "string",
             "description": "Multi-Category Security label"
           },
           "specialized_memory": {
             "type": "integer",
             "format": "int64",
             "description": "Combined memory limit, in MB, for Slurm compute node daemons"
           },
           "name": {
             "type": "string",
             "description": "NodeName"
           },
           "next_state_after_reboot": {
             "type": "array",
             "description": "The state the node will be assigned after rebooting",
             "items": {
               "enum": [
                 "INVALID",
                 "UNKNOWN",
                 "DOWN",
                 "IDLE",
                 "ALLOCATED",
                 "ERROR",
                 "MIXED",
                 "FUTURE",
                 "RESERVED",
                 "UNDRAIN",
                 "CLOUD",
                 "RESUME",
                 "DRAIN",
                 "COMPLETING",
                 "NOT_RESPONDING",
                 "POWERED_DOWN",
                 "FAIL",
                 "POWERING_UP",
                 "MAINTENANCE",
                 "REBOOT_REQUESTED",
                 "REBOOT_CANCELED",
                 "POWERING_DOWN",
                 "DYNAMIC_FUTURE",
                 "REBOOT_ISSUED",
                 "PLANNED",
                 "INVALID_REG",
                 "POWER_DOWN",
                 "POWER_UP",
                 "POWER_DRAIN",
                 "DYNAMIC_NORM"
               ],
               "type": "string"
             }
           },
           "address": {
             "type": "string",
             "description": "NodeAddr, used to establish a communication path"
           },
           "hostname": {
             "type": "string",
             "description": "NodeHostname"
           },
           "state": {
             "type": "array",
             "description": "Node state(s) applicable to this node",
             "items": {
               "enum": [
                 "INVALID",
                 "UNKNOWN",
                 "DOWN",
                 "IDLE",
                 "ALLOCATED",
                 "ERROR",
                 "MIXED",
                 "FUTURE",
                 "RESERVED",
                 "UNDRAIN",
                 "CLOUD",
                 "RESUME",
                 "DRAIN",
                 "COMPLETING",
                 "NOT_RESPONDING",
                 "POWERED_DOWN",
                 "FAIL",
                 "POWERING_UP",
                 "MAINTENANCE",
                 "REBOOT_REQUESTED",
                 "REBOOT_CANCELED",
                 "POWERING_DOWN",
                 "DYNAMIC_FUTURE",
                 "REBOOT_ISSUED",
                 "PLANNED",
                 "INVALID_REG",
                 "POWER_DOWN",
                 "POWER_UP",
                 "POWER_DRAIN",
                 "DYNAMIC_NORM"
               ],
               "type": "string"
             }
           },
           "operating_system": {
             "type": "string",
             "description": "Operating system reported by the node"
           },
           "owner": {
             "type": "string",
             "description": "User allowed to run jobs on this node (unset if no restriction)"
           },
           "partitions": {
             "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
             "description": "Partitions containing this node"
           },
           "port": {
             "type": "integer",
             "format": "int32",
             "description": "TCP port number of the slurmd"
           },
           "real_memory": {
             "type": "integer",
             "format": "int64",
             "description": "Total memory in MB on the node"
           },
           "comment": {
             "type": "string",
             "description": "Arbitrary comment"
           },
           "reason": {
             "type": "string",
             "description": "Describes why the node is in a \"DOWN\", \"DRAINED\", \"DRAINING\", \"FAILING\" or \"FAIL\" state"
           },
           "reason_changed_at": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "When the reason changed (UNIX timestamp)"
           },
           "reason_set_by_user": {
             "type": "string",
             "description": "User who set the reason"
           },
           "resume_after": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Number of seconds after the node's state is updated to \"DOWN\" or \"DRAIN\" before scheduling a node state resume"
           },
           "reservation": {
             "type": "string",
             "description": "Name of reservation containing this node"
           },
           "alloc_memory": {
             "type": "integer",
             "format": "int64",
             "description": "Total memory in MB currently allocated for jobs"
           },
           "alloc_cpus": {
             "type": "integer",
             "format": "int32",
             "description": "Total number of CPUs currently allocated for jobs"
           },
           "alloc_idle_cpus": {
             "type": "integer",
             "format": "int32",
             "description": "Total number of idle CPUs"
           },
           "tres_used": {
             "type": "string",
             "description": "Trackable resources currently allocated for jobs"
           },
           "tres_weighted": {
             "type": "number",
             "format": "double",
             "description": "Weighted number of billable trackable resources allocated"
           },
           "slurmd_start_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time when the slurmd started (UNIX timestamp)"
           },
           "sockets": {
             "type": "integer",
             "format": "int32",
             "description": "Number of physical processor sockets\/chips on the node"
           },
           "threads": {
             "type": "integer",
             "format": "int32",
             "description": "Number of logical threads in a single physical core"
           },
           "temporary_disk": {
             "type": "integer",
             "format": "int32",
             "description": "Total size in MB of temporary disk storage in TmpFS"
           },
           "weight": {
             "type": "integer",
             "format": "int32",
             "description": "Weight of the node for scheduling purposes"
           },
           "tres": {
             "type": "string",
             "description": "Configured trackable resources"
           },
           "version": {
             "type": "string",
             "description": "Slurmd version"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_acct_gather_energy": {
         "type": "object",
         "properties": {
           "average_watts": {
             "type": "integer",
             "format": "int32",
             "description": "Average power consumption, in watts"
           },
           "base_consumed_energy": {
             "type": "integer",
             "format": "int64",
             "description": "The energy consumed between when the node was powered on and the last time it was registered by slurmd, in joules"
           },
           "consumed_energy": {
             "type": "integer",
             "format": "int64",
             "description": "The energy consumed between the last time the node was registered by the slurmd daemon and the last node energy accounting sample, in joules"
           },
           "current_watts": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "The instantaneous power consumption at the time of the last node energy accounting sample, in watts"
           },
           "previous_consumed_energy": {
             "type": "integer",
             "format": "int64",
             "description": "Previous value of consumed_energy"
           },
           "last_collected": {
             "type": "integer",
             "format": "int64",
             "description": "Time when energy data was last retrieved (UNIX timestamp)"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_ext_sensors_data": {
         "type": "object",
         "description": "removed field",
         "properties": {
         },
         "deprecated": true
       },
       "v0.0.40_power_mgmt_data": {
         "type": "object",
         "description": "removed field",
         "properties": {
         },
         "deprecated": true
       },
       "v0.0.40_update_node_msg": {
         "type": "object",
         "properties": {
           "comment": {
             "type": "string",
             "description": "Arbitrary comment"
           },
           "cpu_bind": {
             "type": "integer",
             "format": "int32",
             "description": "Default method for binding tasks to allocated CPUs"
           },
           "extra": {
             "type": "string",
             "description": "Arbitrary string used for node filtering if extra constraints are enabled"
           },
           "features": {
             "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
             "description": "Available features"
           },
           "features_act": {
             "$ref": "#\/components\/schemas\/v0.0.40_csv_string",
             "description": "Currently active features"
           },
           "gres": {
             "type": "string",
             "description": "Generic resources"
           },
           "address": {
             "$ref": "#\/components\/schemas\/v0.0.40_hostlist_string",
             "description": "NodeAddr, used to establish a communication path"
           },
           "hostname": {
             "$ref": "#\/components\/schemas\/v0.0.40_hostlist_string",
             "description": "NodeHostname"
           },
           "name": {
             "$ref": "#\/components\/schemas\/v0.0.40_hostlist_string",
             "description": "NodeName"
           },
           "state": {
             "type": "array",
             "description": "New state to assign to the node",
             "items": {
               "enum": [
                 "INVALID",
                 "UNKNOWN",
                 "DOWN",
                 "IDLE",
                 "ALLOCATED",
                 "ERROR",
                 "MIXED",
                 "FUTURE",
                 "RESERVED",
                 "UNDRAIN",
                 "CLOUD",
                 "RESUME",
                 "DRAIN",
                 "COMPLETING",
                 "NOT_RESPONDING",
                 "POWERED_DOWN",
                 "FAIL",
                 "POWERING_UP",
                 "MAINTENANCE",
                 "REBOOT_REQUESTED",
                 "REBOOT_CANCELED",
                 "POWERING_DOWN",
                 "DYNAMIC_FUTURE",
                 "REBOOT_ISSUED",
                 "PLANNED",
                 "INVALID_REG",
                 "POWER_DOWN",
                 "POWER_UP",
                 "POWER_DRAIN",
                 "DYNAMIC_NORM"
               ],
               "type": "string"
             }
           },
           "reason": {
             "type": "string",
             "description": "Reason for node being DOWN or DRAINING"
           },
           "reason_uid": {
             "type": "string",
             "description": "User ID to associate with the reason (needed if user root is sending message)"
           },
           "resume_after": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Number of seconds after which to automatically resume DOWN or DRAINED node"
           },
           "weight": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Weight of the node for scheduling purposes"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_partition_resp": {
         "type": "object",
         "properties": {
           "partitions": {
             "$ref": "#\/components\/schemas\/v0.0.40_partition_info_msg",
             "description": "List of partitions"
           },
           "last_update": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time of last partition change (UNIX timestamp)"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "partitions",
           "last_update"
         ]
       },
       "v0.0.40_partition_info_msg": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_partition_info"
         }
       },
       "v0.0.40_partition_info": {
         "type": "object",
         "properties": {
           "nodes": {
             "type": "object",
             "properties": {
               "allowed_allocation": {
                 "type": "string",
                 "description": "AllocNodes"
               },
               "configured": {
                 "type": "string",
                 "description": "Nodes"
               },
               "total": {
                 "type": "integer",
                 "format": "int32",
                 "description": "TotalNodes"
               }
             }
           },
           "accounts": {
             "type": "object",
             "properties": {
               "allowed": {
                 "type": "string",
                 "description": "AllowAccounts"
               },
               "deny": {
                 "type": "string",
                 "description": "DenyAccounts"
               }
             }
           },
           "groups": {
             "type": "object",
             "properties": {
               "allowed": {
                 "type": "string",
                 "description": "AllowGroups"
               }
             }
           },
           "qos": {
             "type": "object",
             "properties": {
               "allowed": {
                 "type": "string",
                 "description": "AllowQOS"
               },
               "deny": {
                 "type": "string",
                 "description": "DenyQOS"
               },
               "assigned": {
                 "type": "string",
                 "description": "QOS"
               }
             }
           },
           "alternate": {
             "type": "string",
             "description": "Alternate"
           },
           "tres": {
             "type": "object",
             "properties": {
               "billing_weights": {
                 "type": "string",
                 "description": "TRESBillingWeights"
               },
               "configured": {
                 "type": "string",
                 "description": "TRES"
               }
             }
           },
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "cpus": {
             "type": "object",
             "properties": {
               "task_binding": {
                 "type": "integer",
                 "format": "int32",
                 "description": "CpuBind"
               },
               "total": {
                 "type": "integer",
                 "format": "int32",
                 "description": "TotalCPUs"
               }
             }
           },
           "defaults": {
             "type": "object",
             "properties": {
               "memory_per_cpu": {
                 "type": "integer",
                 "format": "int64",
                 "description": "DefMemPerCPU or DefMemPerNode"
               },
               "partition_memory_per_cpu": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "DefMemPerCPU"
               },
               "partition_memory_per_node": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "DefMemPerNode"
               },
               "time": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "DefaultTime in minutes"
               },
               "job": {
                 "type": "string",
                 "description": "JobDefaults"
               }
             }
           },
           "grace_time": {
             "type": "integer",
             "format": "int32",
             "description": "GraceTime"
           },
           "maximums": {
             "type": "object",
             "properties": {
               "cpus_per_node": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "MaxCPUsPerNode"
               },
               "cpus_per_socket": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "MaxCPUsPerSocket"
               },
               "memory_per_cpu": {
                 "type": "integer",
                 "format": "int64",
                 "description": "MaxMemPerCPU or MaxMemPerNode"
               },
               "partition_memory_per_cpu": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "MaxMemPerCPU"
               },
               "partition_memory_per_node": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "MaxMemPerNode"
               },
               "nodes": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "MaxNodes"
               },
               "shares": {
                 "type": "integer",
                 "format": "int32",
                 "description": "OverSubscribe"
               },
               "oversubscribe": {
                 "type": "object",
                 "properties": {
                   "jobs": {
                     "type": "integer",
                     "format": "int32",
                     "description": "Maximum number of jobs allowed to oversubscribe resources"
                   },
                   "flags": {
                     "type": "array",
                     "description": "Flags applicable to the OverSubscribe setting",
                     "items": {
                       "enum": [
                         "force"
                       ],
                       "type": "string"
                     }
                   }
                 }
               },
               "time": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "MaxTime"
               },
               "over_time_limit": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
                 "description": "OverTimeLimit"
               }
             }
           },
           "minimums": {
             "type": "object",
             "properties": {
               "nodes": {
                 "type": "integer",
                 "format": "int32",
                 "description": "MinNodes"
               }
             }
           },
           "name": {
             "type": "string",
             "description": "PartitionName"
           },
           "node_sets": {
             "type": "string",
             "description": "NodeSets"
           },
           "priority": {
             "type": "object",
             "properties": {
               "job_factor": {
                 "type": "integer",
                 "format": "int32",
                 "description": "PriorityJobFactor"
               },
               "tier": {
                 "type": "integer",
                 "format": "int32",
                 "description": "PriorityTier"
               }
             }
           },
           "timeouts": {
             "type": "object",
             "properties": {
               "resume": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
                 "description": "ResumeTimeout (GLOBAL if both set and infinite are false)"
               },
               "suspend": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint16_no_val",
                 "description": "SuspendTimeout (GLOBAL if both set and infinite are false)"
               }
             }
           },
           "partition": {
             "type": "object",
             "properties": {
               "state": {
                 "type": "array",
                 "description": "Current state(s)",
                 "items": {
                   "enum": [
                     "INACTIVE",
                     "UNKNOWN",
                     "UP",
                     "DOWN",
                     "DRAIN"
                   ],
                   "type": "string"
                 }
               }
             }
           },
           "suspend_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "SuspendTime (GLOBAL if both set and infinite are false)"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_reservation_resp": {
         "type": "object",
         "properties": {
           "reservations": {
             "$ref": "#\/components\/schemas\/v0.0.40_reservation_info_msg",
             "description": "List of reservations"
           },
           "last_update": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "Time of last reservation change (UNIX timestamp)"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "reservations",
           "last_update"
         ]
       },
       "v0.0.40_reservation_info_msg": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_reservation_info"
         }
       },
       "v0.0.40_reservation_info": {
         "type": "object",
         "properties": {
           "accounts": {
             "type": "string",
             "description": "Comma separated list of permitted accounts"
           },
           "burst_buffer": {
             "type": "string",
             "description": "BurstBuffer"
           },
           "core_count": {
             "type": "integer",
             "format": "int32",
             "description": "CoreCnt"
           },
           "core_specializations": {
             "$ref": "#\/components\/schemas\/v0.0.40_reservation_info_core_spec",
             "description": "Reserved cores specification"
           },
           "end_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "EndTime (UNIX timestamp)"
           },
           "features": {
             "type": "string",
             "description": "Features"
           },
           "flags": {
             "type": "array",
             "description": "Flags associated with the reservation",
             "items": {
               "enum": [
                 "MAINT",
                 "NO_MAINT",
                 "DAILY",
                 "NO_DAILY",
                 "WEEKLY",
                 "NO_WEEKLY",
                 "IGNORE_JOBS",
                 "NO_IGNORE_JOBS",
                 "ANY_NODES",
                 "STATIC",
                 "NO_STATIC",
                 "PART_NODES",
                 "NO_PART_NODES",
                 "OVERLAP",
                 "SPEC_NODES",
                 "TIME_FLOAT",
                 "REPLACE",
                 "ALL_NODES",
                 "PURGE_COMP",
                 "WEEKDAY",
                 "NO_WEEKDAY",
                 "WEEKEND",
                 "NO_WEEKEND",
                 "FLEX",
                 "NO_FLEX",
                 "DURATION_PLUS",
                 "DURATION_MINUS",
                 "NO_HOLD_JOBS_AFTER_END",
                 "NO_PURGE_COMP",
                 "MAGNETIC",
                 "SKIP",
                 "HOURLY",
                 "NO_HOURLY",
                 "REOCCURRING"
               ],
               "type": "string"
             }
           },
           "groups": {
             "type": "string",
             "description": "Groups"
           },
           "licenses": {
             "type": "string",
             "description": "Licenses"
           },
           "max_start_delay": {
             "type": "integer",
             "format": "int32",
             "description": "MaxStartDelay in seconds"
           },
           "name": {
             "type": "string",
             "description": "ReservationName"
           },
           "node_count": {
             "type": "integer",
             "format": "int32",
             "description": "NodeCnt"
           },
           "node_list": {
             "type": "string",
             "description": "Nodes"
           },
           "partition": {
             "type": "string",
             "description": "PartitionName"
           },
           "purge_completed": {
             "type": "object",
             "properties": {
               "time": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "If PURGE_COMP flag is set, the number of seconds this reservation will sit idle before it is revoked"
               }
             }
           },
           "start_time": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
             "description": "StartTime (UNIX timestamp)"
           },
           "watts": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val"
           },
           "tres": {
             "type": "string",
             "description": "Comma separated list of required TRES"
           },
           "users": {
             "type": "string",
             "description": "Comma separated list of permitted users"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_reservation_info_core_spec": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_reservation_core_spec"
         }
       },
       "v0.0.40_reservation_core_spec": {
         "type": "object",
         "properties": {
           "node": {
             "type": "string",
             "description": "Name of reserved node"
           },
           "core": {
             "type": "string",
             "description": "IDs of reserved cores"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_slurmdbd_jobs_resp": {
         "type": "object",
         "properties": {
           "jobs": {
             "$ref": "#\/components\/schemas\/v0.0.40_job_list",
             "description": "jobs"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "jobs"
         ]
       },
       "v0.0.40_job_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_job"
         }
       },
       "v0.0.40_job": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string",
             "description": "Account the job ran under"
           },
           "comment": {
             "type": "object",
             "properties": {
               "administrator": {
                 "type": "string",
                 "description": "Arbitrary comment made by administrator"
               },
               "job": {
                 "type": "string",
                 "description": "Arbitrary comment made by user"
               },
               "system": {
                 "type": "string",
                 "description": "Arbitrary comment from slurmctld"
               }
             }
           },
           "allocation_nodes": {
             "type": "integer",
             "format": "int32",
             "description": "List of nodes allocated to the job"
           },
           "array": {
             "type": "object",
             "properties": {
               "job_id": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Job ID of job array, or 0 if N\/A"
               },
               "limits": {
                 "type": "object",
                 "properties": {
                   "max": {
                     "type": "object",
                     "properties": {
                       "running": {
                         "type": "object",
                         "properties": {
                           "tasks": {
                             "type": "integer",
                             "format": "int32",
                             "description": "Maximum number of simultaneously running tasks, 0 if no limit"
                           }
                         }
                       }
                     }
                   }
                 }
               },
               "task_id": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "Task ID of this task in job array"
               },
               "task": {
                 "type": "string",
                 "description": "String expression of task IDs in this record"
               }
             }
           },
           "association": {
             "$ref": "#\/components\/schemas\/v0.0.40_assoc_short",
             "description": "Unique identifier for the association"
           },
           "block": {
             "type": "string",
             "description": "The name of the block to be used (used with Blue Gene systems)"
           },
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "constraints": {
             "type": "string",
             "description": "Feature(s) the job requested as a constraint"
           },
           "container": {
             "type": "string",
             "description": "Absolute path to OCI container bundle"
           },
           "derived_exit_code": {
             "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
             "description": "return code returned by process"
           },
           "time": {
             "type": "object",
             "properties": {
               "elapsed": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Elapsed time in seconds"
               },
               "eligible": {
                 "type": "integer",
                 "format": "int64",
                 "description": "Time when the job became eligible to run (UNIX timestamp)"
               },
               "end": {
                 "type": "integer",
                 "format": "int64",
                 "description": "End time (UNIX timestamp)"
               },
               "start": {
                 "type": "integer",
                 "format": "int64",
                 "description": "Time execution began (UNIX timestamp)"
               },
               "submission": {
                 "type": "integer",
                 "format": "int64",
                 "description": "Time when the job was submitted (UNIX timestamp)"
               },
               "suspended": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Total time in suspended state in seconds"
               },
               "system": {
                 "type": "object",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "format": "int64",
                     "description": "System CPU time used by the job in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "format": "int64",
                     "description": "System CPU time used by the job in microseconds"
                   }
                 }
               },
               "limit": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "Maximum run time in minutes"
               },
               "total": {
                 "type": "object",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "format": "int64",
                     "description": "Sum of System and User CPU time used by the job in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "format": "int64",
                     "description": "Sum of System and User CPU time used by the job in microseconds"
                   }
                 }
               },
               "user": {
                 "type": "object",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "format": "int64",
                     "description": "User CPU time used by the job in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "format": "int64",
                     "description": "User CPU time used by the job in microseconds"
                   }
                 }
               }
             }
           },
           "exit_code": {
             "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
             "description": "return code returned by process"
           },
           "extra": {
             "type": "string",
             "description": "Arbitrary string used for node filtering if extra constraints are enabled"
           },
           "failed_node": {
             "type": "string",
             "description": "Name of node that caused job failure"
           },
           "flags": {
             "type": "array",
             "description": "Flags associated with the job",
             "items": {
               "enum": [
                 "NONE",
                 "CLEAR_SCHEDULING",
                 "NOT_SET",
                 "STARTED_ON_SUBMIT",
                 "STARTED_ON_SCHEDULE",
                 "STARTED_ON_BACKFILL",
                 "START_RECEIVED"
               ],
               "type": "string"
             }
           },
           "group": {
             "type": "string",
             "description": "Group ID of the user that owns the job"
           },
           "het": {
             "type": "object",
             "properties": {
               "job_id": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Heterogeneous job ID, if applicable"
               },
               "job_offset": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "Unique sequence number applied to this component of the heterogeneous job"
               }
             }
           },
           "job_id": {
             "type": "integer",
             "format": "int32",
             "description": "Job ID"
           },
           "name": {
             "type": "string",
             "description": "Job name"
           },
           "licenses": {
             "type": "string",
             "description": "License(s) required by the job"
           },
           "mcs": {
             "type": "object",
             "properties": {
               "label": {
                 "type": "string",
                 "description": "Multi-Category Security label on the job"
               }
             }
           },
           "nodes": {
             "type": "string",
             "description": "Node(s) allocated to the job"
           },
           "partition": {
             "type": "string",
             "description": "Partition assigned to the job"
           },
           "hold": {
             "type": "boolean",
             "description": "Job held"
           },
           "priority": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Request specific job priority"
           },
           "qos": {
             "type": "string",
             "description": "Quality of Service assigned to the job"
           },
           "required": {
             "type": "object",
             "properties": {
               "CPUs": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Minimum number of CPUs required"
               },
               "memory_per_cpu": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Minimum memory in megabytes per allocated CPU"
               },
               "memory_per_node": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Minimum memory in megabytes per allocated node"
               }
             }
           },
           "kill_request_user": {
             "type": "string",
             "description": "User ID that requested termination of the job"
           },
           "reservation": {
             "type": "object",
             "properties": {
               "id": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Unique identifier of requested reservation"
               },
               "name": {
                 "type": "string",
                 "description": "Name of reservation to use"
               }
             }
           },
           "script": {
             "type": "string",
             "description": "Job batch script; only the first component in a HetJob is populated or honored"
           },
           "state": {
             "type": "object",
             "properties": {
               "current": {
                 "type": "array",
                 "description": "Current state",
                 "items": {
                   "enum": [
                     "PENDING",
                     "RUNNING",
                     "SUSPENDED",
                     "COMPLETED",
                     "CANCELLED",
                     "FAILED",
                     "TIMEOUT",
                     "NODE_FAIL",
                     "PREEMPTED",
                     "BOOT_FAIL",
                     "DEADLINE",
                     "OUT_OF_MEMORY",
                     "LAUNCH_FAILED",
                     "UPDATE_DB",
                     "REQUEUED",
                     "REQUEUE_HOLD",
                     "SPECIAL_EXIT",
                     "RESIZING",
                     "CONFIGURING",
                     "COMPLETING",
                     "STOPPED",
                     "RECONFIG_FAIL",
                     "POWER_UP_NODE",
                     "REVOKED",
                     "REQUEUE_FED",
                     "RESV_DEL_HOLD",
                     "SIGNALING",
                     "STAGE_OUT"
                   ],
                   "type": "string"
                 }
               },
               "reason": {
                 "type": "string",
                 "description": "Reason for previous Pending or Failed state"
               }
             }
           },
           "steps": {
             "$ref": "#\/components\/schemas\/v0.0.40_step_list",
             "description": "Individual steps in the job"
           },
           "submit_line": {
             "type": "string",
             "description": "Command used to submit the job"
           },
           "tres": {
             "type": "object",
             "properties": {
               "allocated": {
                 "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                 "description": "Trackable resources allocated to the job"
               },
               "requested": {
                 "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                 "description": "Trackable resources requested by job"
               }
             }
           },
           "used_gres": {
             "type": "string",
             "description": "Generic resources used by job"
           },
           "user": {
             "type": "string",
             "description": "User that owns the job"
           },
           "wckey": {
             "$ref": "#\/components\/schemas\/v0.0.40_wckey_tag_struct",
             "description": "WCKey ID with tagging"
           },
           "working_directory": {
             "type": "string",
             "description": "Path to current working directory"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_assoc_short": {
         "type": "object",
         "properties": {
           "account": {
             "type": "string",
             "description": "Account"
           },
           "cluster": {
             "type": "string",
             "description": "Cluster"
           },
           "partition": {
             "type": "string",
             "description": "Partition"
           },
           "user": {
             "type": "string",
             "description": "User name"
           },
           "id": {
             "type": "integer",
             "format": "int32",
             "description": "Numeric association ID"
           }
         },
         "required": [
           "user"
         ]
       },
       "v0.0.40_step_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_step"
         }
       },
       "v0.0.40_step": {
         "type": "object",
         "properties": {
           "time": {
             "type": "object",
             "properties": {
               "elapsed": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Elapsed time in seconds"
               },
               "end": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "End time (UNIX timestamp)"
               },
               "start": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                 "description": "Time execution began (UNIX timestamp)"
               },
               "suspended": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Time in suspended state in seconds"
               },
               "system": {
                 "type": "object",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "format": "int64",
                     "description": "System CPU time used by the step in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "format": "int32",
                     "description": "System CPU time used by the step in microseconds"
                   }
                 }
               },
               "total": {
                 "type": "object",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "format": "int64",
                     "description": "Total CPU time used by the step in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "format": "int32",
                     "description": "Total CPU time used by the step in microseconds"
                   }
                 }
               },
               "user": {
                 "type": "object",
                 "properties": {
                   "seconds": {
                     "type": "integer",
                     "format": "int64",
                     "description": "User CPU time used by the step in seconds"
                   },
                   "microseconds": {
                     "type": "integer",
                     "format": "int32",
                     "description": "User CPU time used by the step in microseconds"
                   }
                 }
               }
             }
           },
           "exit_code": {
             "$ref": "#\/components\/schemas\/v0.0.40_process_exit_code_verbose",
             "description": "return code returned by process"
           },
           "nodes": {
             "type": "object",
             "properties": {
               "count": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Number of nodes in the job step"
               },
               "range": {
                 "type": "string",
                 "description": "Node(s) allocated to the job step"
               },
               "list": {
                 "$ref": "#\/components\/schemas\/v0.0.40_hostlist",
                 "description": "List of nodes used by the step"
               }
             }
           },
           "tasks": {
             "type": "object",
             "properties": {
               "count": {
                 "type": "integer",
                 "format": "int32",
                 "description": "Total number of tasks"
               }
             }
           },
           "pid": {
             "type": "string",
             "description": "Process ID"
           },
           "CPU": {
             "type": "object",
             "properties": {
               "requested_frequency": {
                 "type": "object",
                 "properties": {
                   "min": {
                     "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                     "description": "Minimum requested CPU frequency in kHz"
                   },
                   "max": {
                     "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                     "description": "Maximum requested CPU frequency in kHz"
                   }
                 }
               },
               "governor": {
                 "type": "string",
                 "description": "Requested CPU frequency governor in kHz"
               }
             }
           },
           "kill_request_user": {
             "type": "string",
             "description": "User ID that requested termination of the step"
           },
           "state": {
             "type": "array",
             "description": "Current state",
             "items": {
               "enum": [
                 "PENDING",
                 "RUNNING",
                 "SUSPENDED",
                 "COMPLETED",
                 "CANCELLED",
                 "FAILED",
                 "TIMEOUT",
                 "NODE_FAIL",
                 "PREEMPTED",
                 "BOOT_FAIL",
                 "DEADLINE",
                 "OUT_OF_MEMORY",
                 "LAUNCH_FAILED",
                 "UPDATE_DB",
                 "REQUEUED",
                 "REQUEUE_HOLD",
                 "SPECIAL_EXIT",
                 "RESIZING",
                 "CONFIGURING",
                 "COMPLETING",
                 "STOPPED",
                 "RECONFIG_FAIL",
                 "POWER_UP_NODE",
                 "REVOKED",
                 "REQUEUE_FED",
                 "RESV_DEL_HOLD",
                 "SIGNALING",
                 "STAGE_OUT"
               ],
               "type": "string"
             }
           },
           "statistics": {
             "type": "object",
             "properties": {
               "CPU": {
                 "type": "object",
                 "properties": {
                   "actual_frequency": {
                     "type": "integer",
                     "format": "int64",
                     "description": "Average weighted CPU frequency of all tasks in kHz"
                   }
                 }
               },
               "energy": {
                 "type": "object",
                 "properties": {
                   "consumed": {
                     "$ref": "#\/components\/schemas\/v0.0.40_uint64_no_val",
                     "description": "Total energy consumed by all tasks in a job in joules"
                   }
                 }
               }
             }
           },
           "step": {
             "type": "object",
             "properties": {
               "id": {
                 "type": "string",
                 "description": "Slurm Job Step ID"
               },
               "name": {
                 "type": "string",
                 "description": "Step name"
               }
             }
           },
           "task": {
             "type": "object",
             "properties": {
               "distribution": {
                 "type": "string",
                 "description": "The layout of the step was when it was running"
               }
             }
           },
           "tres": {
             "type": "object",
             "properties": {
               "requested": {
                 "type": "object",
                 "properties": {
                   "max": {
                     "$ref": "#\/components\/schemas\/v0.0.40_step_tres_req_max",
                     "description": "Maximum TRES usage requested among all tasks"
                   },
                   "min": {
                     "$ref": "#\/components\/schemas\/v0.0.40_step_tres_req_min",
                     "description": "Minimum TRES usage requested among all tasks"
                   },
                   "average": {
                     "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                     "description": "Average TRES usage requested among all tasks"
                   },
                   "total": {
                     "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                     "description": "Total TRES usage requested among all tasks"
                   }
                 }
               },
               "consumed": {
                 "type": "object",
                 "properties": {
                   "max": {
                     "$ref": "#\/components\/schemas\/v0.0.40_step_tres_usage_max",
                     "description": "Maximum TRES usage consumed among all tasks"
                   },
                   "min": {
                     "$ref": "#\/components\/schemas\/v0.0.40_step_tres_usage_min",
                     "description": "Minimum TRES usage consumed among all tasks"
                   },
                   "average": {
                     "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                     "description": "Average TRES usage consumed among all tasks"
                   },
                   "total": {
                     "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                     "description": "Total TRES usage consumed among all tasks"
                   }
                 }
               },
               "allocated": {
                 "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                 "description": "Trackable resources allocated to the step"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.40_hostlist": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.40_step_tres_req_max": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_tres"
         }
       },
       "v0.0.40_tres": {
         "type": "object",
         "properties": {
           "type": {
             "type": "string",
             "description": "TRES type (CPU, MEM, etc)"
           },
           "name": {
             "type": "string",
             "description": "TRES name (if applicable)"
           },
           "id": {
             "type": "integer",
             "format": "int32",
             "description": "ID used in database"
           },
           "count": {
             "type": "integer",
             "format": "int64",
             "description": "TRES count (0 if listed generically)"
           }
         },
         "required": [
           "type"
         ]
       },
       "v0.0.40_step_tres_req_min": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_tres"
         }
       },
       "v0.0.40_step_tres_usage_max": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_tres"
         }
       },
       "v0.0.40_step_tres_usage_min": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_tres"
         }
       },
       "v0.0.40_tres_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_tres"
         }
       },
       "v0.0.40_wckey_tag_struct": {
         "type": "object",
         "properties": {
           "wckey": {
             "type": "string",
             "description": "WCKey name"
           },
           "flags": {
             "type": "array",
             "description": "Active flags",
             "items": {
               "enum": [
                 "ASSIGNED_DEFAULT"
               ],
               "type": "string"
             }
           }
         },
         "required": [
           "wckey",
           "flags"
         ]
       },
       "v0.0.40_openapi_slurmdbd_config_resp": {
         "type": "object",
         "properties": {
           "clusters": {
             "$ref": "#\/components\/schemas\/v0.0.40_cluster_rec_list",
             "description": "Clusters"
           },
           "tres": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "TRES"
           },
           "accounts": {
             "$ref": "#\/components\/schemas\/v0.0.40_account_list",
             "description": "Accounts"
           },
           "users": {
             "$ref": "#\/components\/schemas\/v0.0.40_user_list",
             "description": "Users"
           },
           "qos": {
             "$ref": "#\/components\/schemas\/v0.0.40_qos_list",
             "description": "QOS"
           },
           "wckeys": {
             "$ref": "#\/components\/schemas\/v0.0.40_wckey_list",
             "description": "WCKeys"
           },
           "associations": {
             "$ref": "#\/components\/schemas\/v0.0.40_assoc_list",
             "description": "Associations"
           },
           "instances": {
             "$ref": "#\/components\/schemas\/v0.0.40_instance_list",
             "description": "Instances"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_cluster_rec_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_cluster_rec"
         }
       },
       "v0.0.40_cluster_rec": {
         "type": "object",
         "properties": {
           "controller": {
             "type": "object",
             "properties": {
               "host": {
                 "type": "string",
                 "description": "ControlHost"
               },
               "port": {
                 "type": "integer",
                 "format": "int32",
                 "description": "ControlPort"
               }
             }
           },
           "flags": {
             "type": "array",
             "description": "Flags",
             "items": {
               "enum": [
                 "REGISTERING",
                 "MULTIPLE_SLURMD",
                 "FRONT_END",
                 "FEDERATION",
                 "EXTERNAL"
               ],
               "type": "string"
             }
           },
           "name": {
             "type": "string",
             "description": "ClusterName"
           },
           "nodes": {
             "type": "string",
             "description": "Node names"
           },
           "select_plugin": {
             "type": "string"
           },
           "associations": {
             "type": "object",
             "properties": {
               "root": {
                 "$ref": "#\/components\/schemas\/v0.0.40_assoc_short",
                 "description": "Root association information"
               }
             }
           },
           "rpc_version": {
             "type": "integer",
             "format": "int32",
             "description": "RPC version used in the cluster"
           },
           "tres": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "Trackable resources"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_account_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_account"
         }
       },
       "v0.0.40_account": {
         "type": "object",
         "properties": {
           "associations": {
             "$ref": "#\/components\/schemas\/v0.0.40_assoc_short_list",
             "description": "Associations involving this account (only populated if requested)"
           },
           "coordinators": {
             "$ref": "#\/components\/schemas\/v0.0.40_coord_list",
             "description": "List of users that are a coordinator of this account (only populated if requested)"
           },
           "description": {
             "type": "string",
             "description": "Arbitrary string describing the account"
           },
           "name": {
             "type": "string",
             "description": "Account name"
           },
           "organization": {
             "type": "string",
             "description": "Organization to which the account belongs"
           },
           "flags": {
             "type": "array",
             "description": "Flags associated with the account",
             "items": {
               "enum": [
                 "DELETED"
               ],
               "type": "string"
             }
           }
         },
         "required": [
           "description",
           "name",
           "organization"
         ]
       },
       "v0.0.40_assoc_short_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_assoc_short"
         }
       },
       "v0.0.40_coord_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_coord"
         }
       },
       "v0.0.40_coord": {
         "type": "object",
         "properties": {
           "name": {
             "type": "string",
             "description": "User name"
           },
           "direct": {
             "type": "boolean",
             "description": "Indicates whether the coordinator was directly assigned to this account"
           }
         },
         "required": [
           "name"
         ]
       },
       "v0.0.40_user_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_user"
         }
       },
       "v0.0.40_user": {
         "type": "object",
         "properties": {
           "administrator_level": {
             "type": "array",
             "description": "AdminLevel granted to the user",
             "items": {
               "enum": [
                 "Not Set",
                 "None",
                 "Operator",
                 "Administrator"
               ],
               "type": "string"
             }
           },
           "associations": {
             "$ref": "#\/components\/schemas\/v0.0.40_assoc_short_list",
             "description": "Associations created for this user"
           },
           "coordinators": {
             "$ref": "#\/components\/schemas\/v0.0.40_coord_list",
             "description": "Accounts this user is a coordinator for"
           },
           "default": {
             "type": "object",
             "properties": {
               "account": {
                 "type": "string",
                 "description": "Default Account"
               },
               "wckey": {
                 "type": "string",
                 "description": "Default WCKey"
               }
             }
           },
           "flags": {
             "type": "array",
             "description": "Flags associated with user",
             "items": {
               "enum": [
                 "NONE",
                 "DELETED"
               ],
               "type": "string"
             }
           },
           "name": {
             "type": "string",
             "description": "User name"
           },
           "old_name": {
             "type": "string",
             "description": "Previous user name"
           },
           "wckeys": {
             "$ref": "#\/components\/schemas\/v0.0.40_wckey_list",
             "description": "List of available WCKeys"
           }
         },
         "required": [
           "name"
         ]
       },
       "v0.0.40_wckey_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_wckey"
         }
       },
       "v0.0.40_wckey": {
         "type": "object",
         "properties": {
           "accounting": {
             "$ref": "#\/components\/schemas\/v0.0.40_accounting_list",
             "description": "Accounting records containing related resource usage"
           },
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "id": {
             "type": "integer",
             "format": "int32",
             "description": "Unique ID for this user-cluster-wckey combination"
           },
           "name": {
             "type": "string",
             "description": "WCKey name"
           },
           "user": {
             "type": "string",
             "description": "User name"
           },
           "flags": {
             "type": "array",
             "description": "Flags associated with the WCKey",
             "items": {
               "enum": [
                 "DELETED"
               ],
               "type": "string"
             }
           }
         },
         "required": [
           "cluster",
           "name",
           "user"
         ]
       },
       "v0.0.40_accounting_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_accounting"
         }
       },
       "v0.0.40_accounting": {
         "type": "object",
         "properties": {
           "allocated": {
             "type": "object",
             "properties": {
               "seconds": {
                 "type": "integer",
                 "format": "int64",
                 "description": "Number of cpu seconds allocated"
               }
             }
           },
           "id": {
             "type": "integer",
             "format": "int32",
             "description": "Association ID or Workload characterization key ID"
           },
           "start": {
             "type": "integer",
             "format": "int64",
             "description": "When the record was started"
           },
           "TRES": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres",
             "description": "Trackable resources"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_qos_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_qos"
         }
       },
       "v0.0.40_qos": {
         "type": "object",
         "properties": {
           "description": {
             "type": "string",
             "description": "Arbitrary description"
           },
           "flags": {
             "type": "array",
             "description": "Flags, to avoid modifying current values specify NOT_SET.",
             "items": {
               "enum": [
                 "NOT_SET",
                 "ADD",
                 "REMOVE",
                 "PARTITION_MINIMUM_NODE",
                 "PARTITION_MAXIMUM_NODE",
                 "PARTITION_TIME_LIMIT",
                 "ENFORCE_USAGE_THRESHOLD",
                 "NO_RESERVE",
                 "REQUIRED_RESERVATION",
                 "DENY_LIMIT",
                 "OVERRIDE_PARTITION_QOS",
                 "NO_DECAY",
                 "USAGE_FACTOR_SAFE",
                 "RELATIVE"
               ],
               "type": "string"
             }
           },
           "id": {
             "type": "integer",
             "format": "int32",
             "description": "Unique ID"
           },
           "limits": {
             "type": "object",
             "properties": {
               "grace_time": {
                 "type": "integer",
                 "format": "int32",
                 "description": "GraceTime"
               },
               "max": {
                 "type": "object",
                 "properties": {
                   "active_jobs": {
                     "type": "object",
                     "properties": {
                       "accruing": {
                         "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                         "description": "GrpJobsAccrue"
                       },
                       "count": {
                         "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                         "description": "GrpJobs"
                       }
                     }
                   },
                   "tres": {
                     "type": "object",
                     "properties": {
                       "total": {
                         "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                         "description": "GrpTRES"
                       },
                       "minutes": {
                         "type": "object",
                         "properties": {
                           "per": {
                             "type": "object",
                             "properties": {
                               "qos": {
                                 "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                                 "description": "GrpTRESRunMins"
                               },
                               "job": {
                                 "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                                 "description": "MaxTRESMinsPerJob"
                               },
                               "account": {
                                 "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                                 "description": "MaxTRESRunMinsPerAccount"
                               },
                               "user": {
                                 "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                                 "description": "MaxTRESRunMinsPerUser"
                               }
                             }
                           }
                         }
                       },
                       "per": {
                         "type": "object",
                         "properties": {
                           "account": {
                             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                             "description": "MaxTRESPerAccount"
                           },
                           "job": {
                             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                             "description": "MaxTRESPerJob"
                           },
                           "node": {
                             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                             "description": "MaxTRESPerNode"
                           },
                           "user": {
                             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                             "description": "MaxTRESPerUser"
                           }
                         }
                       }
                     }
                   },
                   "wall_clock": {
                     "type": "object",
                     "properties": {
                       "per": {
                         "type": "object",
                         "properties": {
                           "qos": {
                             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                             "description": "GrpWall"
                           },
                           "job": {
                             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                             "description": "MaxWallDurationPerJob"
                           }
                         }
                       }
                     }
                   },
                   "jobs": {
                     "type": "object",
                     "properties": {
                       "active_jobs": {
                         "type": "object",
                         "properties": {
                           "per": {
                             "type": "object",
                             "properties": {
                               "account": {
                                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                                 "description": "MaxJobsPerAccount"
                               },
                               "user": {
                                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                                 "description": "MaxJobsPerUser"
                               }
                             }
                           }
                         }
                       },
                       "per": {
                         "type": "object",
                         "properties": {
                           "account": {
                             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                             "description": "MaxSubmitJobsPerAccount"
                           },
                           "user": {
                             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                             "description": "MaxSubmitJobsPerUser"
                           }
                         }
                       }
                     }
                   },
                   "accruing": {
                     "type": "object",
                     "properties": {
                       "per": {
                         "type": "object",
                         "properties": {
                           "account": {
                             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                             "description": "MaxJobsAccruePerAccount"
                           },
                           "user": {
                             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                             "description": "MaxJobsAccruePerUser"
                           }
                         }
                       }
                     }
                   }
                 }
               },
               "factor": {
                 "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val",
                 "description": "LimitFactor"
               },
               "min": {
                 "type": "object",
                 "properties": {
                   "priority_threshold": {
                     "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                     "description": "MinPrioThreshold"
                   },
                   "tres": {
                     "type": "object",
                     "properties": {
                       "per": {
                         "type": "object",
                         "properties": {
                           "job": {
                             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                             "description": "MinTRES"
                           }
                         }
                       }
                     }
                   }
                 }
               }
             }
           },
           "name": {
             "type": "string",
             "description": "Name"
           },
           "preempt": {
             "type": "object",
             "properties": {
               "list": {
                 "$ref": "#\/components\/schemas\/v0.0.40_qos_preempt_list",
                 "description": "Other QOS's this QOS can preempt"
               },
               "mode": {
                 "type": "array",
                 "description": "PreemptMode",
                 "items": {
                   "enum": [
                     "DISABLED",
                     "SUSPEND",
                     "REQUEUE",
                     "CANCEL",
                     "GANG"
                   ],
                   "type": "string"
                 }
               },
               "exempt_time": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "PreemptExemptTime"
               }
             }
           },
           "priority": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Priority"
           },
           "usage_factor": {
             "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val",
             "description": "UsageFactor"
           },
           "usage_threshold": {
             "$ref": "#\/components\/schemas\/v0.0.40_float64_no_val",
             "description": "UsageThreshold"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_qos_preempt_list": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.40_assoc_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_assoc"
         }
       },
       "v0.0.40_assoc": {
         "type": "object",
         "properties": {
           "accounting": {
             "$ref": "#\/components\/schemas\/v0.0.40_accounting_list",
             "description": "Accounting records containing related resource usage"
           },
           "account": {
             "type": "string",
             "description": "Account"
           },
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "comment": {
             "type": "string",
             "description": "Arbitrary comment"
           },
           "default": {
             "type": "object",
             "properties": {
               "qos": {
                 "type": "string",
                 "description": "Default QOS"
               }
             }
           },
           "flags": {
             "type": "array",
             "description": "Flags on the association",
             "items": {
               "enum": [
                 "DELETED"
               ],
               "type": "string"
             }
           },
           "max": {
             "type": "object",
             "properties": {
               "jobs": {
                 "type": "object",
                 "properties": {
                   "per": {
                     "type": "object",
                     "properties": {
                       "count": {
                         "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                         "description": "GrpJobs"
                       },
                       "accruing": {
                         "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                         "description": "GrpJobsAccrue"
                       },
                       "submitted": {
                         "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                         "description": "GrpSubmitJobs"
                       },
                       "wall_clock": {
                         "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                         "description": "MaxWallDurationPerJob"
                       }
                     }
                   },
                   "active": {
                     "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                     "description": "MaxJobs"
                   },
                   "accruing": {
                     "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                     "description": "MaxJobsAccrue"
                   },
                   "total": {
                     "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                     "description": "MaxSubmitJobs"
                   }
                 }
               },
               "tres": {
                 "type": "object",
                 "properties": {
                   "total": {
                     "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                     "description": "GrpTRES"
                   },
                   "group": {
                     "type": "object",
                     "properties": {
                       "minutes": {
                         "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                         "description": "GrpTRESMins"
                       },
                       "active": {
                         "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                         "description": "GrpTRESRunMins"
                       }
                     }
                   },
                   "minutes": {
                     "type": "object",
                     "properties": {
                       "total": {
                         "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                         "description": "MaxTRESMinsPerJob"
                       },
                       "per": {
                         "type": "object",
                         "properties": {
                           "job": {
                             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                             "description": "MaxTRESMinsPerJob"
                           }
                         }
                       }
                     }
                   },
                   "per": {
                     "type": "object",
                     "properties": {
                       "job": {
                         "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                         "description": "MaxTRESPerJob"
                       },
                       "node": {
                         "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
                         "description": "MaxTRESPerNode"
                       }
                     }
                   }
                 }
               },
               "per": {
                 "type": "object",
                 "properties": {
                   "account": {
                     "type": "object",
                     "properties": {
                       "wall_clock": {
                         "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                         "description": "GrpWall"
                       }
                     }
                   }
                 }
               }
             }
           },
           "id": {
             "$ref": "#\/components\/schemas\/v0.0.40_assoc_short",
             "description": "Association ID"
           },
           "is_default": {
             "type": "boolean",
             "description": "Is default association for user"
           },
           "lineage": {
             "type": "string",
             "description": "Complete path up the hierarchy to the root association"
           },
           "min": {
             "type": "object",
             "properties": {
               "priority_threshold": {
                 "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
                 "description": "MinPrioThreshold"
               }
             }
           },
           "parent_account": {
             "type": "string",
             "description": "Name of parent account"
           },
           "partition": {
             "type": "string",
             "description": "Partition name"
           },
           "priority": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Association priority factor"
           },
           "qos": {
             "$ref": "#\/components\/schemas\/v0.0.40_qos_string_id_list",
             "description": "List of QOS names"
           },
           "shares_raw": {
             "type": "integer",
             "format": "int32",
             "description": "Allocated shares used for fairshare calculation"
           },
           "user": {
             "type": "string",
             "description": "User name"
           }
         },
         "required": [
           "user"
         ]
       },
       "v0.0.40_qos_string_id_list": {
         "type": "array",
         "description": "List of QOS names",
         "items": {
           "type": "string",
           "description": "List of QOS names"
         }
       },
       "v0.0.40_instance_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_instance"
         }
       },
       "v0.0.40_instance": {
         "type": "object",
         "properties": {
           "cluster": {
             "type": "string",
             "description": "Cluster name"
           },
           "extra": {
             "type": "string",
             "description": "Arbitrary string used for node filtering if extra constraints are enabled"
           },
           "instance_id": {
             "type": "string",
             "description": "Cloud instance ID"
           },
           "instance_type": {
             "type": "string",
             "description": "Cloud instance type"
           },
           "node_name": {
             "type": "string",
             "description": "NodeName"
           },
           "time": {
             "type": "object",
             "properties": {
               "time_end": {
                 "type": "integer",
                 "format": "int64",
                 "description": "When the instance will end (UNIX timestamp)"
               },
               "time_start": {
                 "type": "integer",
                 "format": "int64",
                 "description": "When the instance will start (UNIX timestamp)"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_tres_resp": {
         "type": "object",
         "properties": {
           "TRES": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "TRES"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "TRES"
         ]
       },
       "v0.0.40_openapi_slurmdbd_qos_resp": {
         "type": "object",
         "properties": {
           "qos": {
             "$ref": "#\/components\/schemas\/v0.0.40_qos_list",
             "description": "List of QOS"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "qos"
         ]
       },
       "v0.0.40_openapi_slurmdbd_qos_removed_resp": {
         "type": "object",
         "properties": {
           "removed_qos": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "removed QOS"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "removed_qos"
         ]
       },
       "v0.0.40_string_list": {
         "type": "array",
         "items": {
           "type": "string"
         }
       },
       "v0.0.40_openapi_assocs_resp": {
         "type": "object",
         "properties": {
           "associations": {
             "$ref": "#\/components\/schemas\/v0.0.40_assoc_list",
             "description": "associations"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "associations"
         ]
       },
       "v0.0.40_openapi_assocs_removed_resp": {
         "type": "object",
         "properties": {
           "removed_associations": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "removed_associations"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "removed_associations"
         ]
       },
       "v0.0.40_openapi_instances_resp": {
         "type": "object",
         "properties": {
           "instances": {
             "$ref": "#\/components\/schemas\/v0.0.40_instance_list",
             "description": "instances"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "instances"
         ]
       },
       "v0.0.40_openapi_users_resp": {
         "type": "object",
         "properties": {
           "users": {
             "$ref": "#\/components\/schemas\/v0.0.40_user_list",
             "description": "users"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "users"
         ]
       },
       "v0.0.40_openapi_users_add_cond_resp_str": {
         "type": "object",
         "properties": {
           "added_users": {
             "type": "string",
             "description": "added_users"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "added_users"
         ]
       },
       "v0.0.40_openapi_users_add_cond_resp": {
         "type": "object",
         "properties": {
           "association_condition": {
             "$ref": "#\/components\/schemas\/v0.0.40_users_add_cond",
             "description": "Filters to select associations for users"
           },
           "user": {
             "$ref": "#\/components\/schemas\/v0.0.40_user_short",
             "description": "Admin level of user, DefaultAccount, DefaultWCKey"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "association_condition",
           "user"
         ]
       },
       "v0.0.40_users_add_cond": {
         "type": "object",
         "properties": {
           "accounts": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "CSV accounts list"
           },
           "association": {
             "$ref": "#\/components\/schemas\/v0.0.40_assoc_rec_set",
             "description": "Association limits and options"
           },
           "clusters": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "CSV clusters list"
           },
           "partitions": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "CSV partitions list"
           },
           "users": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "CSV users list"
           },
           "wckeys": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "CSV WCKeys list"
           }
         },
         "required": [
           "users"
         ]
       },
       "v0.0.40_assoc_rec_set": {
         "type": "object",
         "properties": {
           "comment": {
             "type": "string",
             "description": "Arbitrary comment"
           },
           "defaultqos": {
             "type": "string",
             "description": "Default QOS"
           },
           "grpjobs": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of running jobs in this association and its children"
           },
           "grpjobsaccrue": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of pending jobs able to accrue age priority in this association and its children"
           },
           "grpsubmitjobs": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of jobs which can be in a pending or running state at any time in this association and its children"
           },
           "grptres": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "Maximum number of TRES able to be allocated by running jobs in this association and its children"
           },
           "grptresmins": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "Total number of TRES minutes that can possibly be used by past, present and future jobs in this association and its children"
           },
           "grptresrunmins": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "Maximum number of TRES minutes able to be allocated by running jobs in this association and its children"
           },
           "grpwall": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum wall clock time in minutes able to be allocated by running jobs in this association and its children"
           },
           "maxjobs": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of running jobs per user in this association"
           },
           "maxjobsaccrue": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of pending jobs able to accrue age priority at any given time in this association"
           },
           "maxsubmitjobs": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum number of jobs which can be in a pending or running state at any time in this association"
           },
           "maxtresminsperjob": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "Maximum number of TRES minutes each job is able to use in this association"
           },
           "maxtresrunmins": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "Maximum number of TRES minutes able to be allocated by running jobs in this association"
           },
           "maxtresperjob": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "Maximum number of TRES each job is able to use in this association"
           },
           "maxtrespernode": {
             "$ref": "#\/components\/schemas\/v0.0.40_tres_list",
             "description": "Maximum number of TRES each node is able to use"
           },
           "maxwalldurationperjob": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Maximum wall clock time each job is able to use in this association"
           },
           "minpriothresh": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Minimum priority required to reserve resources when scheduling"
           },
           "parent": {
             "type": "string",
             "description": "Name of parent account"
           },
           "priority": {
             "$ref": "#\/components\/schemas\/v0.0.40_uint32_no_val",
             "description": "Association priority factor"
           },
           "qoslevel": {
             "$ref": "#\/components\/schemas\/v0.0.40_qos_string_id_list",
             "description": "List of QOS names"
           },
           "fairshare": {
             "type": "integer",
             "format": "int32",
             "description": "Allocated shares used for fairshare calculation"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_user_short": {
         "type": "object",
         "properties": {
           "adminlevel": {
             "type": "array",
             "description": "AdminLevel granted to the user",
             "items": {
               "enum": [
                 "Not Set",
                 "None",
                 "Operator",
                 "Administrator"
               ],
               "type": "string"
             }
           },
           "defaultaccount": {
             "type": "string",
             "description": "Default account"
           },
           "defaultwckey": {
             "type": "string",
             "description": "Default WCKey"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_clusters_removed_resp": {
         "type": "object",
         "properties": {
           "deleted_clusters": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "deleted_clusters"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "deleted_clusters"
         ]
       },
       "v0.0.40_openapi_clusters_resp": {
         "type": "object",
         "properties": {
           "clusters": {
             "$ref": "#\/components\/schemas\/v0.0.40_cluster_rec_list",
             "description": "clusters"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "clusters"
         ]
       },
       "v0.0.40_openapi_wckey_removed_resp": {
         "type": "object",
         "properties": {
           "deleted_wckeys": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "deleted wckeys"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "deleted_wckeys"
         ]
       },
       "v0.0.40_openapi_wckey_resp": {
         "type": "object",
         "properties": {
           "wckeys": {
             "$ref": "#\/components\/schemas\/v0.0.40_wckey_list",
             "description": "wckeys"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "wckeys"
         ]
       },
       "v0.0.40_openapi_accounts_removed_resp": {
         "type": "object",
         "properties": {
           "removed_accounts": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "removed_accounts"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "removed_accounts"
         ]
       },
       "v0.0.40_openapi_accounts_resp": {
         "type": "object",
         "properties": {
           "accounts": {
             "$ref": "#\/components\/schemas\/v0.0.40_account_list",
             "description": "accounts"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "accounts"
         ]
       },
       "v0.0.40_openapi_accounts_add_cond_resp_str": {
         "type": "object",
         "properties": {
           "added_accounts": {
             "type": "string",
             "description": "added_accounts"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "added_accounts"
         ]
       },
       "v0.0.40_openapi_accounts_add_cond_resp": {
         "type": "object",
         "properties": {
           "association_condition": {
             "$ref": "#\/components\/schemas\/v0.0.40_accounts_add_cond",
             "description": "CSV list of accounts, association limits and options, CSV list of clusters"
           },
           "account": {
             "$ref": "#\/components\/schemas\/v0.0.40_account_short",
             "description": "Account organization and description"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_accounts_add_cond": {
         "type": "object",
         "properties": {
           "accounts": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "CSV accounts list"
           },
           "association": {
             "$ref": "#\/components\/schemas\/v0.0.40_assoc_rec_set",
             "description": "Association limits and options"
           },
           "clusters": {
             "$ref": "#\/components\/schemas\/v0.0.40_string_list",
             "description": "CSV clusters list"
           }
         },
         "required": [
           "accounts"
         ]
       },
       "v0.0.40_account_short": {
         "type": "object",
         "properties": {
           "description": {
             "type": "string",
             "description": "Arbitrary string describing the account"
           },
           "organization": {
             "type": "string",
             "description": "Organization to which the account belongs"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_openapi_slurmdbd_stats_resp": {
         "type": "object",
         "properties": {
           "statistics": {
             "$ref": "#\/components\/schemas\/v0.0.40_stats_rec",
             "description": "statistics"
           },
           "meta": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_meta",
             "description": "Slurm meta values"
           },
           "errors": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_errors",
             "description": "Query errors"
           },
           "warnings": {
             "$ref": "#\/components\/schemas\/v0.0.40_openapi_warnings",
             "description": "Query warnings"
           }
         },
         "required": [
           "statistics"
         ]
       },
       "v0.0.40_stats_rec": {
         "type": "object",
         "properties": {
           "time_start": {
             "type": "integer",
             "format": "int64",
             "description": "When data collection started (UNIX timestamp)"
           },
           "rollups": {
             "$ref": "#\/components\/schemas\/v0.0.40_rollup_stats",
             "description": "Rollup statistics"
           },
           "RPCs": {
             "$ref": "#\/components\/schemas\/v0.0.40_stats_rpc_list",
             "description": "List of RPCs sent to the slurmdbd"
           },
           "users": {
             "$ref": "#\/components\/schemas\/v0.0.40_stats_user_list",
             "description": "List of users that issued RPCs"
           }
         },
         "required": [
         ]
       },
       "v0.0.40_rollup_stats": {
         "type": "array",
         "description": "list of recorded rollup statistics",
         "items": {
           "type": "object",
           "description": "recorded rollup statistics",
           "properties": {
             "type": {
               "type": "string",
               "description": "type",
               "enum": [
                 "internal",
                 "user",
                 "unknown"
               ]
             },
             "last run": {
               "type": "integer",
               "format": "int32",
               "description": "Last time rollup ran (UNIX timestamp)"
             },
             "max_cycle": {
               "type": "integer",
               "format": "int64",
               "description": "longest rollup time (seconds)"
             },
             "total_time": {
               "type": "integer",
               "format": "int64",
               "description": "total time spent doing rollups (seconds)"
             },
             "total_cycles": {
               "type": "integer",
               "format": "int64",
               "description": "number of rollups since last_run"
             },
             "mean_cycles": {
               "type": "integer",
               "format": "int64",
               "description": "average time for rollup (seconds)"
             }
           }
         }
       },
       "v0.0.40_stats_rpc_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_stats_rpc"
         }
       },
       "v0.0.40_stats_rpc": {
         "type": "object",
         "properties": {
           "rpc": {
             "type": "string",
             "description": "RPC type"
           },
           "count": {
             "type": "integer",
             "format": "int32",
             "description": "Number of RPCs processed"
           },
           "time": {
             "type": "object",
             "properties": {
               "average": {
                 "type": "integer",
                 "format": "int64",
                 "description": "Average RPC processing time in microseconds"
               },
               "total": {
                 "type": "integer",
                 "format": "int64",
                 "description": "Total RPC processing time in microseconds"
               }
             }
           }
         },
         "required": [
         ]
       },
       "v0.0.40_stats_user_list": {
         "type": "array",
         "items": {
           "$ref": "#\/components\/schemas\/v0.0.40_stats_user"
         }
       },
       "v0.0.40_stats_user": {
         "type": "object",
         "properties": {
           "user": {
             "type": "string",
             "description": "User ID"
           },
           "count": {
             "type": "integer",
             "format": "int32",
             "description": "Number of RPCs processed"
           },
           "time": {
             "type": "object",
             "properties": {
               "average": {
                 "type": "integer",
                 "format": "int64",
                 "description": "Average RPC processing time in microseconds"
               },
               "total": {
                 "type": "integer",
                 "format": "int64",
                 "description": "Total RPC processing time in microseconds"
               }
             }
           }
         },
         "required": [
         ]
       }
     },
     "securitySchemes": {
       "user": {
         "type": "apiKey",
         "description": "User name",
         "name": "X-SLURM-USER-NAME",
         "in": "header"
       },
       "token": {
         "type": "apiKey",
         "description": "User access token",
         "name": "X-SLURM-USER-TOKEN",
         "in": "header"
       },
       "bearerAuth": {
         "type": "http",
         "description": "Bearer Authentication",
         "scheme": "bearer",
         "bearerFormat": "JWT"
       }
     }
   },
   "info": {
     "contact": {
       "name": "SchedMD LLC",
       "url": "https:\/\/www.schedmd.com\/",
       "email": "sales@schedmd.com"
     },
     "license": {
       "name": "Apache 2.0",
       "url": "https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"
     },
     "title": "Slurm REST API",
     "description": "API to access and control Slurm",
     "termsOfService": "https:\/\/github.com\/SchedMD\/slurm\/blob\/master\/DISCLAIMER",
     "version": "Slurm-24.05.4&openapi\/slurmctld&openapi\/slurmdbd"
   },
   "servers": [
     {
       "url": "\/"
     }
   ],
   "security": [
     {
       "user": [
       ],
       "token": [
       ]
     },
     {
       "token": [
       ]
     },
     {
       "bearerAuth": [
       ]
     },
     {
     }
   ],
   "openapi": "3.0.3"
 }
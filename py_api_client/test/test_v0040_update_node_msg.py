# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm  # noqa: E501

    The version of the OpenAPI document: Slurm-24.05.4&openapi/slurmctld&openapi/slurmdbd
    Contact: sales@schedmd.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.v0040_update_node_msg import V0040UpdateNodeMsg  # noqa: E501
from openapi_client.rest import ApiException

class TestV0040UpdateNodeMsg(unittest.TestCase):
    """V0040UpdateNodeMsg unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V0040UpdateNodeMsg
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.v0040_update_node_msg.V0040UpdateNodeMsg()  # noqa: E501
        if include_optional :
            return V0040UpdateNodeMsg(
                comment = '0', 
                cpu_bind = 56, 
                extra = '0', 
                features = [
                    '0'
                    ], 
                features_act = [
                    '0'
                    ], 
                gres = '0', 
                address = [
                    '0'
                    ], 
                hostname = [
                    '0'
                    ], 
                name = [
                    '0'
                    ], 
                state = [
                    'INVALID'
                    ], 
                reason = '0', 
                reason_uid = '0', 
                resume_after = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                weight = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, )
            )
        else :
            return V0040UpdateNodeMsg(
        )

    def testV0040UpdateNodeMsg(self):
        """Test V0040UpdateNodeMsg"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm  # noqa: E501

    The version of the OpenAPI document: Slurm-24.05.4&openapi/slurmctld&openapi/slurmdbd
    Contact: sales@schedmd.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.v0040_openapi_shares_resp import V0040OpenapiSharesResp  # noqa: E501
from openapi_client.rest import ApiException

class TestV0040OpenapiSharesResp(unittest.TestCase):
    """V0040OpenapiSharesResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V0040OpenapiSharesResp
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.v0040_openapi_shares_resp.V0040OpenapiSharesResp()  # noqa: E501
        if include_optional :
            return V0040OpenapiSharesResp(
                shares = openapi_client.models.v0/0/40_shares_resp_msg.v0.0.40_shares_resp_msg(
                    shares = [
                        openapi_client.models.v0/0/40_assoc_shares_obj_wrap.v0.0.40_assoc_shares_obj_wrap(
                            id = 56, 
                            cluster = '0', 
                            name = '0', 
                            parent = '0', 
                            partition = '0', 
                            shares_normalized = openapi_client.models.v0/0/40_float64_no_val.v0.0.40_float64_no_val(
                                set = True, 
                                infinite = True, 
                                number = 1.337, ), 
                            tres = openapi_client.models.v0_0_40_assoc_shares_obj_wrap_tres.v0_0_40_assoc_shares_obj_wrap_tres(
                                run_seconds = [
                                    openapi_client.models.v0/0/40_shares_uint64_tres.v0.0.40_shares_uint64_tres(
                                        name = '0', 
                                        value = openapi_client.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                            set = True, 
                                            infinite = True, 
                                            number = 56, ), )
                                    ], 
                                group_minutes = [
                                    openapi_client.models.v0/0/40_shares_uint64_tres.v0.0.40_shares_uint64_tres(
                                        name = '0', )
                                    ], 
                                usage = [
                                    openapi_client.models.v0/0/40_shares_float128_tres.v0.0.40_shares_float128_tres(
                                        name = '0', )
                                    ], ), 
                            effective_usage = 1.337, 
                            usage_normalized = openapi_client.models.v0/0/40_float64_no_val.v0.0.40_float64_no_val(
                                set = True, 
                                infinite = True, 
                                number = 1.337, ), 
                            usage = 56, 
                            fairshare = openapi_client.models.v0_0_40_assoc_shares_obj_wrap_fairshare.v0_0_40_assoc_shares_obj_wrap_fairshare(
                                factor = 1.337, 
                                level = 1.337, ), 
                            type = [
                                'USER'
                                ], )
                        ], 
                    total_shares = 56, ), 
                meta = openapi_client.models.v0/0/40_openapi_meta.v0.0.40_openapi_meta(
                    plugin = openapi_client.models.v0_0_40_openapi_meta_plugin.v0_0_40_openapi_meta_plugin(
                        type = '0', 
                        name = '0', 
                        data_parser = '0', 
                        accounting_storage = '0', ), 
                    client = openapi_client.models.v0_0_40_openapi_meta_client.v0_0_40_openapi_meta_client(
                        source = '0', 
                        user = '0', 
                        group = '0', ), 
                    command = [
                        '0'
                        ], 
                    slurm = openapi_client.models.v0_0_40_openapi_meta_slurm.v0_0_40_openapi_meta_slurm(
                        version = openapi_client.models.v0_0_40_openapi_meta_slurm_version.v0_0_40_openapi_meta_slurm_version(
                            major = '0', 
                            micro = '0', 
                            minor = '0', ), 
                        release = '0', 
                        cluster = '0', ), ), 
                errors = [
                    openapi_client.models.v0/0/40_openapi_error.v0.0.40_openapi_error(
                        description = '0', 
                        error_number = 56, 
                        error = '0', 
                        source = '0', )
                    ], 
                warnings = [
                    openapi_client.models.v0/0/40_openapi_warning.v0.0.40_openapi_warning(
                        description = '0', 
                        source = '0', )
                    ]
            )
        else :
            return V0040OpenapiSharesResp(
                shares = openapi_client.models.v0/0/40_shares_resp_msg.v0.0.40_shares_resp_msg(
                    shares = [
                        openapi_client.models.v0/0/40_assoc_shares_obj_wrap.v0.0.40_assoc_shares_obj_wrap(
                            id = 56, 
                            cluster = '0', 
                            name = '0', 
                            parent = '0', 
                            partition = '0', 
                            shares_normalized = openapi_client.models.v0/0/40_float64_no_val.v0.0.40_float64_no_val(
                                set = True, 
                                infinite = True, 
                                number = 1.337, ), 
                            tres = openapi_client.models.v0_0_40_assoc_shares_obj_wrap_tres.v0_0_40_assoc_shares_obj_wrap_tres(
                                run_seconds = [
                                    openapi_client.models.v0/0/40_shares_uint64_tres.v0.0.40_shares_uint64_tres(
                                        name = '0', 
                                        value = openapi_client.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                            set = True, 
                                            infinite = True, 
                                            number = 56, ), )
                                    ], 
                                group_minutes = [
                                    openapi_client.models.v0/0/40_shares_uint64_tres.v0.0.40_shares_uint64_tres(
                                        name = '0', )
                                    ], 
                                usage = [
                                    openapi_client.models.v0/0/40_shares_float128_tres.v0.0.40_shares_float128_tres(
                                        name = '0', )
                                    ], ), 
                            effective_usage = 1.337, 
                            usage_normalized = openapi_client.models.v0/0/40_float64_no_val.v0.0.40_float64_no_val(
                                set = True, 
                                infinite = True, 
                                number = 1.337, ), 
                            usage = 56, 
                            fairshare = openapi_client.models.v0_0_40_assoc_shares_obj_wrap_fairshare.v0_0_40_assoc_shares_obj_wrap_fairshare(
                                factor = 1.337, 
                                level = 1.337, ), 
                            type = [
                                'USER'
                                ], )
                        ], 
                    total_shares = 56, ),
        )

    def testV0040OpenapiSharesResp(self):
        """Test V0040OpenapiSharesResp"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm  # noqa: E501

    The version of the OpenAPI document: Slurm-24.05.4&openapi/slurmctld&openapi/slurmdbd
    Contact: sales@schedmd.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.v0040_assoc_rec_set import V0040AssocRecSet  # noqa: E501
from openapi_client.rest import ApiException

class TestV0040AssocRecSet(unittest.TestCase):
    """V0040AssocRecSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V0040AssocRecSet
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.v0040_assoc_rec_set.V0040AssocRecSet()  # noqa: E501
        if include_optional :
            return V0040AssocRecSet(
                comment = '0', 
                defaultqos = '0', 
                grpjobs = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                grpjobsaccrue = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                grpsubmitjobs = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                grptres = [
                    openapi_client.models.v0/0/40_tres.v0.0.40_tres(
                        type = '0', 
                        name = '0', 
                        id = 56, 
                        count = 56, )
                    ], 
                grptresmins = [
                    openapi_client.models.v0/0/40_tres.v0.0.40_tres(
                        type = '0', 
                        name = '0', 
                        id = 56, 
                        count = 56, )
                    ], 
                grptresrunmins = [
                    openapi_client.models.v0/0/40_tres.v0.0.40_tres(
                        type = '0', 
                        name = '0', 
                        id = 56, 
                        count = 56, )
                    ], 
                grpwall = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                maxjobs = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                maxjobsaccrue = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                maxsubmitjobs = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                maxtresminsperjob = [
                    openapi_client.models.v0/0/40_tres.v0.0.40_tres(
                        type = '0', 
                        name = '0', 
                        id = 56, 
                        count = 56, )
                    ], 
                maxtresrunmins = [
                    openapi_client.models.v0/0/40_tres.v0.0.40_tres(
                        type = '0', 
                        name = '0', 
                        id = 56, 
                        count = 56, )
                    ], 
                maxtresperjob = [
                    openapi_client.models.v0/0/40_tres.v0.0.40_tres(
                        type = '0', 
                        name = '0', 
                        id = 56, 
                        count = 56, )
                    ], 
                maxtrespernode = [
                    openapi_client.models.v0/0/40_tres.v0.0.40_tres(
                        type = '0', 
                        name = '0', 
                        id = 56, 
                        count = 56, )
                    ], 
                maxwalldurationperjob = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                minpriothresh = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                parent = '0', 
                priority = openapi_client.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ), 
                qoslevel = [
                    '0'
                    ], 
                fairshare = 56
            )
        else :
            return V0040AssocRecSet(
        )

    def testV0040AssocRecSet(self):
        """Test V0040AssocRecSet"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
